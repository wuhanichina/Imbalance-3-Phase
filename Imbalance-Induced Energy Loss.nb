(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    634422,      12229]
NotebookOptionsPosition[    629331,      12138]
NotebookOutlinePosition[    629748,      12155]
CellTagsIndexPosition[    629705,      12152]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Imbalance-Induced Energy Loss", "Title",
 CellChangeTimes->{{3.7932649878924165`*^9, 3.7932650715885797`*^9}, 
   3.7933045170490236`*^9, {3.7933045767779713`*^9, 3.7933046541764083`*^9}, {
   3.7933047453210735`*^9, 3.793304759807931*^9}, {3.7933049139502172`*^9, 
   3.793304918720065*^9}, {3.7941137596451283`*^9, 
   3.794113760051731*^9}},ExpressionUUID->"ed9b963a-0d40-494c-be29-\
2ca8ffa18313"],

Cell["\<\
A draft of my work  \[OpenCurlyDoubleQuote]Analytical Estimation for \
Imbalance-Induced Energy Loss\[CloseCurlyDoubleQuote] 
Han Wu, Hohai University, China
E-mail: wuhan@hhu.edu.cn 
Working on this project During <16th Mar 2020, 18th Mar 2020 >
Copyrights reserved\
\>", "Text",
 CellChangeTimes->{{3.793304891870093*^9, 3.7933049959707537`*^9}, {
  3.793305220390133*^9, 3.793305235614371*^9}, {3.793316745708671*^9, 
  3.793316751949987*^9}, {3.793425405262763*^9, 3.793425411006382*^9}, {
  3.793425442930583*^9, 3.793425454222397*^9}, {3.7934374889403715`*^9, 
  3.793437600525814*^9}},ExpressionUUID->"5ae06f43-3833-438c-b62a-\
217611f9cc34"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "directory", " ", "=", " ", 
    "\"\<D:\\\\OneDrive - \:6cb3\:6d77\:5927\:5b66\\\\Data\>\""}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "change", " ", "to", " ", "where", " ", "you", " ", "place", " ", "the", 
    " ", "data"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"datafile", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"directory", ",", " ", "\"\<WPD_load.wl\>\""}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReadList", "[", "datafile", "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"data", " ", 
    RowBox[{"name", ":", " ", "threephasedata"}]}], "*)"}]}]}], "Code",
 CellChangeTimes->{3.7984306450506754`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"29ed0497-2608-4544-955c-3338f3cffe99"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ia", " ", "=", " ", 
   RowBox[{"threephasedata", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ib", " ", "=", " ", 
   RowBox[{"threephasedata", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ic", " ", "=", " ", 
   RowBox[{"threephasedata", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r", " ", "=", " ", "0.1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalDelta]t", " ", "=", " ", 
   RowBox[{"60", "*", "10"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.798430673451745*^9, {3.7984309420242696`*^9, 3.7984309515905128`*^9}, {
   3.8013850314538136`*^9, 3.8013850920853796`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"222bbdac-cbd9-4b45-b441-925ea3cb7d15"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]a", " ", "=", " ", 
   RowBox[{"Mean", "[", "Ia", "]"}]}], ";", 
  RowBox[{"\[Mu]b", " ", "=", " ", 
   RowBox[{"Mean", "[", "Ib", "]"}]}], ";", 
  RowBox[{"\[Mu]c", " ", "=", " ", 
   RowBox[{"Mean", "[", "Ic", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Sigma]a", " ", "=", " ", 
   RowBox[{"Variance", "[", "Ia", "]"}]}], ";", 
  RowBox[{"\[Sigma]b", " ", "=", " ", 
   RowBox[{"Variance", "[", "Ib", "]"}]}], ";", 
  RowBox[{"\[Sigma]c", " ", "=", " ", 
   RowBox[{"Variance", "[", "Ic", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"COVab", " ", "=", " ", 
   RowBox[{
    RowBox[{"Covariance", "[", "threephasedata", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
  RowBox[{"COVac", " ", "=", " ", 
   RowBox[{
    RowBox[{"Covariance", "[", "threephasedata", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ";", 
  RowBox[{"COVbc", " ", "=", " ", 
   RowBox[{
    RowBox[{"Covariance", "[", "threephasedata", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "3"}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.801385376131522*^9, 3.8013855433053913`*^9}, {
  3.801385590662337*^9, 3.8013856001726956`*^9}, {3.80138565032969*^9, 
  3.8013856508132143`*^9}, {3.801385698550931*^9, 3.8013856985879097`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"0cec9744-2eaa-4bf5-a308-e8f406ea69df"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EstIprc2", " ", "=", " ", 
   RowBox[{
   "\[Sigma]a", "+", "\[Sigma]b", "+", "\[Sigma]c", " ", "-", "COVab", "-", 
    "COVac", "-", "COVbc", "+", 
    RowBox[{"\[Mu]a", "^", "2"}], "+", 
    RowBox[{"\[Mu]b", "^", "2"}], "+", 
    RowBox[{"\[Mu]c", "^", "2"}], "-", 
    RowBox[{"\[Mu]a", "*", "\[Mu]b"}], "-", 
    RowBox[{"\[Mu]b", "*", "\[Mu]c"}], "-", 
    RowBox[{"\[Mu]a", "*", "\[Mu]c"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EstEnergyLoss", " ", "=", " ", 
   RowBox[{"EstIprc2", "*", "\[CapitalDelta]t", "*", "r", "*", 
    RowBox[{
     RowBox[{"Length", "[", "Ia", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"3600", "*", "1000"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<The estimated energy loss is \>\"", ",", "EstEnergyLoss", ",", 
   "\"\< kWh\>\""}], "]"}]}], "Code",
 CellChangeTimes->{{3.801385567852372*^9, 3.801385893285246*^9}, 
   3.805776007678152*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"a2a60532-47d9-4da2-8798-6dd8d9f1f559"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The estimated energy loss is \"\>", "\[InvisibleSpace]", 
   "2085.9187266142635`", "\[InvisibleSpace]", "\<\" kWh\"\>"}],
  SequenceForm["The estimated energy loss is ", 2085.9187266142635`, " kWh"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.801385890588428*^9, 3.80138589441959*^9}, {
   3.803013064978825*^9, 3.803013094036045*^9}, 3.803368501062572*^9, 
   3.8033685329884057`*^9, 3.803890615339261*^9, 3.8038906457888565`*^9, 
   3.8039368044031267`*^9, 3.803936837779311*^9, 3.8042183740319333`*^9, 
   3.8042837772833548`*^9, 3.804291873519579*^9, 3.804291948464202*^9, 
   3.804292083433342*^9, 3.8043118352712183`*^9, 3.8043119213973083`*^9, 
   3.804312038984796*^9, 3.8043120812170873`*^9, 3.8057751099613743`*^9, 
   3.805776023591044*^9, {3.806116623403778*^9, 3.806116637783631*^9}, 
   3.80679238026088*^9, 3.8067924175289326`*^9, 3.8068217211515007`*^9, 
   3.8068829570580807`*^9, 3.806883003949241*^9, 3.815711112512511*^9, 
   3.815711575552023*^9, 3.8157824047264805`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[12]:=",ExpressionUUID->"589528cf-3318-4301-8d87-\
a0d9e0e7d42a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define the Phase Residual Current", "Section",
 CellChangeTimes->{{3.7933046802917566`*^9, 3.793304708327216*^9}, {
   3.7933047679681163`*^9, 3.7933047932450094`*^9}, 3.7933048590211096`*^9, 
   3.7933050225663424`*^9, {3.793305694431465*^9, 
   3.7933057032671175`*^9}},ExpressionUUID->"717ea891-dec8-4b96-a6cd-\
696ad4006d18"],

Cell[TextData[{
 "Let ",
 StyleBox["Ia",
  FontSlant->"Italic"],
 ",",
 StyleBox[" Ib",
  FontSlant->"Italic"],
 ", ",
 StyleBox["Ic",
  FontSlant->"Italic"],
 " be the phase current supported by each phase,",
 StyleBox[" Iprc",
  FontSlant->"Italic"],
 " denotes the phase residual current. Suppose the resistance and reactance \
of three-phase are the same, that is, the phase angles of three-phases are \
fixed as 120 degree. "
}], "Text",
 CellChangeTimes->{{3.793305043611715*^9, 3.7933051710236483`*^9}, {
  3.793305287818228*^9, 3.793305291266971*^9}, {3.793305525106987*^9, 
  3.793305526471282*^9}, {3.793307783597424*^9, 3.793307788699563*^9}, {
  3.7933099502232924`*^9, 
  3.793309968268138*^9}},ExpressionUUID->"f03d9281-f57e-49d2-87d9-\
0f64d590f1ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Iprc2", "=", 
    RowBox[{
     RowBox[{"Ia", "^", "2"}], "+", 
     RowBox[{"Ib", "^", "2"}], "+", 
     RowBox[{"Ic", "^", "2"}], "-", 
     RowBox[{"Ia", "*", "Ib"}], "-", 
     RowBox[{"Ia", "*", "Ic"}], "-", 
     RowBox[{"Ib", "*", "Ic"}]}]}], ";"}], "Code"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NeutralEnergyLoss", " ", "=", " ", 
    RowBox[{"Total", "[", 
     RowBox[{"Iprc2", "*", "r", "*", 
      RowBox[{"\[CapitalDelta]t", "/", 
       RowBox[{"(", 
        RowBox[{"3600", "*", "1000"}], ")"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<The true energy loss on neutral line is \>\"", ",", 
   "NeutralEnergyLoss", ",", "\"\< kWh\>\""}], "]"}]}], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.7933061874070044`*^9, 3.7933061936711597`*^9}, {
   3.793306485456357*^9, 3.793306490230586*^9}, {3.793307694062676*^9, 
   3.7933077168450212`*^9}, {3.793307794877863*^9, 3.7933078207535677`*^9}, {
   3.7933078855853777`*^9, 3.793307909973319*^9}, 3.7933094895194254`*^9, {
   3.793310002438072*^9, 3.7933100784769707`*^9}, {3.7933369447514677`*^9, 
   3.7933369483634834`*^9}, {3.798428709415419*^9, 3.798428714897703*^9}, {
   3.7984305221238627`*^9, 3.7984305469699516`*^9}, 3.7984310194927588`*^9, 
   3.79843115702594*^9, {3.7984314552689476`*^9, 3.79843145629576*^9}, {
   3.7984317537110662`*^9, 3.7984317553281274`*^9}, {3.7984323465432777`*^9, 
   3.79843239082924*^9}, {3.798442007672362*^9, 3.7984420096021876`*^9}, {
   3.8057757389419184`*^9, 3.805775858974615*^9}, {3.8057759526450005`*^9, 
   3.8057759862367735`*^9}, {3.8157861734131813`*^9, 3.815786191878541*^9}, 
   3.8157862337191863`*^9},ExpressionUUID->"23f04a8e-c4ca-43a3-aa5e-\
10d745dd863a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The actual Neutral Energy Loss is \:ff1a \"\>", 
   "\[InvisibleSpace]", "2085.8461833018405`", 
   "\[InvisibleSpace]", "\<\" kWh\"\>"}],
  SequenceForm[
  "The actual Neutral Energy Loss is \:ff1a ", 2085.8461833018405`, " kWh"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.805775979373702*^9, 3.8057759870133286`*^9}, {
   3.8061166235127163`*^9, 3.806116637928548*^9}, 3.806792380358824*^9, 
   3.8067924176388707`*^9, 3.806821721334396*^9, 3.8068829572059965`*^9, 
   3.8068830040991554`*^9, 3.8157116103095365`*^9, 3.8157824056641846`*^9, 
   3.815786199807088*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[192]:=",ExpressionUUID->"dab8e694-bc31-41cd-\
8618-697f1afc80a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "r", ",", "\[Theta]", ",", "IA", ",", "IB", ",", "IC", ",", "I0"}], "}"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"10", ",", "13", ",", "14"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"\[Theta]", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"90", " ", "Degree"}], ",", 
       RowBox[{
        RowBox[{"90", "Degree"}], "+", 
        RowBox[{"120", "Degree"}]}], ",", 
       RowBox[{
        RowBox[{"90", "Degree"}], "+", 
        RowBox[{"120", "Degree"}], "+", 
        RowBox[{"120", " ", "Degree"}]}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"IA", " ", "=", " ", 
     RowBox[{"AngleVector", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"IB", " ", "=", " ", 
     RowBox[{"AngleVector", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"IC", " ", "=", " ", 
     RowBox[{"AngleVector", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"I0", " ", "=", " ", 
     RowBox[{"IA", "+", "IB", "+", "IC"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Black", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{"(*", " ", "\:5411\:91cf\:56fe\:539f\:70b9", " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "IA"}], "}"}], "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "IB"}], "}"}], "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "IC"}], "}"}], "]"}], ",", 
        RowBox[{
        "(*", " ", "\:4e09\:76f8\:7535\:6d41\:5411\:91cf", " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<IA\>\"", ",", "IA", ",", "Bottom"}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<IB\>\"", ",", "IB", ",", "Right"}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<IC\>\"", ",", "IC", ",", "Left"}], "]"}], ",", 
        RowBox[{"(*", " ", "\:76f8\:7535\:6d41\:6807\:6ce8", " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"FaceForm", "[", "]"}], ",", 
        RowBox[{"EdgeForm", "[", 
         RowBox[{"Dashing", "[", "Medium", "]"}], "]"}], ",", 
        RowBox[{"Triangle", "[", 
         RowBox[{"{", 
          RowBox[{"IA", ",", "IB", ",", "IC"}], "}"}], "]"}], ",", 
        RowBox[{
        "(*", " ", "\:4e09\:89d2\:5f62\:865a\:7ebf\:5916\:6846", " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Red", ",", 
          RowBox[{"Point", "[", 
           RowBox[{"RegionCentroid", "[", 
            RowBox[{"Triangle", "[", 
             RowBox[{"{", 
              RowBox[{"IA", ",", "IB", ",", "IC"}], "}"}], "]"}], "]"}], 
           "]"}], 
          RowBox[{"(*", " ", 
           RowBox[{
           "\:4e09\:89d2\:5f62\:51e0\:4f55\:4e2d\:5fc3", "\:ff0c", 
            "\:7ea2\:8272\:70b9"}], " ", "*)"}], ","}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Blue", ",", 
          RowBox[{"TriangleConstruct", "[", 
           RowBox[{
            RowBox[{"Triangle", "[", 
             RowBox[{"{", 
              RowBox[{"IA", ",", "IB", ",", "IC"}], "}"}], "]"}], ",", 
            "\"\<Orthocenter\>\""}], "]"}], 
          RowBox[{"(*", " ", 
           RowBox[{
           "\:4e09\:89d2\:5f62\:91cd\:4e2d\:5fc3", "\:ff0c", 
            "\:7ea2\:8272\:70b9"}], " ", "*)"}], ","}], "*)"}], 
        "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "I0"}], "}"}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"\"\<I0\>\"", ",", "I0", ",", "Top"}], "]"}]}], 
       RowBox[{"(*", " ", 
        RowBox[{
        "\:4e2d\:6027\:70b9\:7535\:6d41", "/", 
         "\:4e0d\:5e73\:8861\:7535\:6d41"}], " ", "*)"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Background", "\[Rule]", " ", "None"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.798084979558567*^9, 3.798085018301009*^9}, {
  3.7984310672421207`*^9, 3.798431104272147*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"1ba0b525-0b77-43af-bc91-1925a45114b5"],

Cell[BoxData[
 GraphicsBox[
  {GrayLevel[0], PointBox[{0, 0}], ArrowBox[{{0, 0}, {0, 10}}], 
   ArrowBox[NCache[{{0, 0}, {
      Rational[-13, 2] 3^Rational[1, 2], Rational[-13, 2]}}, {{0, 
      0}, {-11.258330249197702`, -6.5}}]], 
   ArrowBox[NCache[{{0, 0}, {7 3^Rational[1, 2], -7}}, {{0, 0}, {
      12.12435565298214, -7}}]], 
   TagBox[InsetBox["IA", {0, 10}, Bottom],
    "InsetString"], 
   TagBox[
    InsetBox["IB", 
     NCache[{Rational[-13, 2] 3^Rational[1, 2], 
       Rational[-13, 2]}, {-11.258330249197702`, -6.5}], Right],
    "InsetString"], 
   TagBox[
    InsetBox["IC", NCache[{7 3^Rational[1, 2], -7}, {12.12435565298214, -7}], 
     Left],
    "InsetString"], 
   {EdgeForm[Dashing[Medium]], FaceForm[None], 
    TagBox[
     PolygonBox[
      NCache[{{0, 10}, {
        Rational[-13, 2] 3^Rational[1, 2], Rational[-13, 2]}, {
        7 3^Rational[1, 2], -7}}, {{0, 10}, {-11.258330249197702`, -6.5}, {
        12.12435565298214, -7}}]],
     "Triangle"], 
    {GrayLevel[0], 
     ArrowBox[NCache[{{0, 0}, {
        Rational[1, 2] 3^Rational[1, 2], Rational[-7, 2]}}, {{0, 0}, {
        0.8660254037844386, -3.5}}]], 
     TagBox[
      InsetBox["I0", 
       NCache[{Rational[1, 2] 3^Rational[1, 2], Rational[-7, 2]}, {
        0.8660254037844386, -3.5}], Top],
      "InsetString"]}}},
  Background->None]], "Output",
 CellChangeTimes->{{3.79808502063056*^9, 3.7980850249504814`*^9}, 
   3.798427553125758*^9, 3.7984314102204666`*^9, 3.7984408428500123`*^9, 
   3.798449115619157*^9, 3.798449217325904*^9, 3.798523278807344*^9, 
   3.7999120448811893`*^9, 3.801375851091831*^9, 3.8030130943578916`*^9, 
   3.803368533386179*^9, 3.803890646122696*^9, 3.803936837982429*^9, 
   3.8042919486231103`*^9, 3.8043118354341264`*^9, 3.804311921571208*^9, 
   3.8043120813979845`*^9, 3.806116638045481*^9, 3.8067924177568026`*^9, 
   3.8068217214403353`*^9, 3.8068830042350783`*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"47b07e14-2f62-4b03-8730-3053581e5fbe"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Methodology", "Section",
 CellChangeTimes->{{3.798442418951131*^9, 3.7984424219508*^9}, {
  3.798442453890109*^9, 3.7984424758507752`*^9}, {3.798448942396744*^9, 
  3.7984489426241393`*^9}, {3.798494461098858*^9, 
  3.798494469514942*^9}},ExpressionUUID->"15ee1627-611c-42c1-9d7e-\
964c762dee9d"],

Cell["\<\
The phase residual current is a linear combination of products of correlated \
variables. 
Iprc2=Ia^2+Ib^2+Ic^2-Ia*Ib-Ia*Ic-Ib*Ic;
Since the phase current is written as a mixture of normal variables, the \
product term can also derived.\
\>", "Text",
 CellChangeTimes->{
  3.7984502837705183`*^9, {3.79845037887395*^9, 3.7984504711246195`*^9}, {
   3.7984510602174425`*^9, 3.798451103868292*^9}, {3.7984514239921975`*^9, 
   3.798451444677556*^9}, {3.798514362727625*^9, 3.7985143819639783`*^9}, {
   3.8054480886793633`*^9, 3.8054481143994355`*^9}, {3.8157859884274635`*^9, 
   3.815785990226948*^9}},ExpressionUUID->"89435a27-6638-4764-98d8-\
e1833bb976c1"],

Cell[CellGroupData[{

Cell["\<\
Bayesian method to build distribution from small number of observations\
\>", "Subsection",
 CellChangeTimes->{{3.802990767113036*^9, 
  3.80299080996034*^9}},ExpressionUUID->"74a3d41e-1ef5-424e-a97b-\
0d56595a0221"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]\[ScriptCapitalD]", "=", 
   RowBox[{"MatrixPropertyDistribution", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{"Eigenvalues", "[", "x", "]"}], "]"}], ",", 
     RowBox[{"x", "\[Distributed]", 
      RowBox[{"InverseWishartMatrixDistribution", "[", 
       RowBox[{"10", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "3"}], ",", "1"}], "}"}]}], "}"}]}], "]"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SmoothHistogram3D", "[", 
  RowBox[{
   RowBox[{"RandomVariate", "[", 
    RowBox[{"\[Lambda]\[ScriptCapitalD]", ",", 
     RowBox[{"10", "^", "4"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", ".1"}], ",", ".5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", ".1"}], ",", ".5"}], "}"}], ",", "Automatic"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8017191231193447`*^9, 3.801719128191784*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"573346c8-077f-4dd2-a088-5575424d3fe5"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx03Qk0Ff//x3EhJJUIpYVQREqbVJgbUmmTNu2KpKhIiVZpQylSQspSSZIs
FZWiKJKyZk+Kol3Zy/Lve3m/5t90ft/jdxzP5nfv3LnzmPnMnbn3Dl+/zWyD
oICAgFC/P//789tvxbWzK67dTr5Y7HGh2ONussCan3fD9Ix1Tw++6zP4buw/
fch/2ef6P33AtFjpabGX/ukDd4fK7Q49909Xajmo0HLwwL+339UZbpftup1/
unTX/f7TB3fN5z/dp+tx/dPPdi2Hf3oA/7+7//QL/L8f/NNzej/485PyTzfT
uP3n5/E/vcDkxp+ftH/60s1X/vw8/afz/7yQ8U/nz/7ZzH96eYbXn5+sf/qa
2iN/fl7+0+uEmD8/Of/0WP6Czv2nb1ee/Ocn758+gf9f/j+9wWDsn5+Cf/pt
/gJ69U93Wq/656fwnz6Zf8dF/3T+6qNQ/E/nrw6DS/7p/NVKrvSfzl+tpMv+
6W0p/f78lP/TH/Cf+Nf/9P2Von9+Kv7pDH9Bv/mn09/kUmCg2RAFxWm69Dd6
93/klPqJcxuCV2T6wCl1reGidtnRx+GUesiN71KWI/zglDrva9L+2inn4JS6
66zAhx4XTsMp5meiYnCP35Fwit6g3Dl37CY45c4/OeV2csrt5JTbySn67131
zZNN4RTzP/mq+BsNezjF9Cmb7/ZZowWn3Nsnp9xOTrmdnHI7OUWXfeigZbcW
TjGfMueSJGVc4RTTF8uvPXZsOpxyb5+coh8fc+vIyNNwSt3iwP1h+uMvwinu
t6lniYefH5yiS8vcVs+1h1PcflD4js9LRsEppt/4esaMPfPgFNP3Dmo9lmAL
p+hOfsvH2C6DU+7jIqfod/zXhiluh1N0kQSXNyWH4JS9HWEJndVb4JRdPyVi
Fcuuwinmf6zHOOP2cDilXrf6P6fhcEr+uE7ROU65nZxSdxePLdC95w2n1E/y
XYfCKXWV778TjQdfglPqXd7PwynuN0xVLez1OTil7s/fDoTDKfUhT967/9KM
wf6Uuil/+3AV+1PcfnpVgmGHH/an1C34240w7E8xnytzO7VjbsEpdUX+9uQe
nFJPcZTa1uQVBae435b/tjMu2J9ylzM55XZyyu3klNvJKbeTU24np9xOTrmd
nHI7OaXuyt++WcApukeW2q/pu+CUegh/u+cKp1ieVXofksc5wCnul7895MEp
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
Wn+5TtFPzH+heCUUTqnX8V9f8oNT6g73Owd4/XZnX9/s7knNG0z8AkLhlHqQ
wIkFsxui4JT6t5mv5Ce5VMEp9VORlYZKbfVwSt0msG76ux2CPCyv7p5iWSP9
4osMnNJvFT3bQ2cWDIdT6nPn6tWuGDkaTqmfHPh9w8Q+2nBKvckzedk0UX04
xeNdo3bpVTwPTqk/VnosOuD5dDilzuutJOsWZACn1Etmr3JzCOLBKfVqSc3X
j3T04JT64ZJdBovuTIFT6nlixVnTKrXhlLqijs4yFfGJcIrn/YG3s8qccXBK
XfJ0L9tHAzXhlPpY0aKr8jdU4ZS68Ac704g3KnBKvTxNsHWSlBKc4vV4nyoP
2bvD4JS6a4u29WmvQXCK9XCtp0Hf9QPglHpg6KgHQyX6wyl1O+VRZXeP94FT
rIdCndN0OsV45BTLYZv7AEVrER45xfyvyyzZ916IR06pp/pe1daK78Ejp9Sv
fT90ucJBgEdOqcufS1GRX9cBp9Rr+4WNLjryC05pPeU6pe5qaWQzz/gKnFJP
WbBzibWQC5xS9/d5FCJy2gNOqTcdO/9iulIEnFL3qnpvxlv2EE6pGy2YULP0
43s4pb75QKvmNEsBHjmlbuqy1ejJc0k4pV56avXk4fuHwin1iaEzfEcPVodT
+i3e6bTQ8c96S06pJ8VU/3p5bCqcUj/ktNHUs2YKnFK/qpfwS2f/NDilzsx5
kS9Qpwen1J9taRy5QYgHp9TTzNeOvCaiC6fUVaK+fggPnAKn1P3WnQlomjEZ
TqmbhSQ1Hd89EU6pW3sGHecNHA+n1A+7JXfU146BU+rRbxPz0/TV4ZT6/kVP
5RNejYRT6ovHr0o1EmOdUg9yqpM6E68Ip9QVn6msPv5ZHk6pWznM2LPjqQyc
Uk+MGZR8NkMKTqmv2l+d9FVPEk6pa/VT1/t4qTecUs8p7r13pLoInFL/0nf3
7sm7hOAUXt52jn3B6wGnuB0nUVPblx3Yn1I/MyZFI2NOG/aneN5FlrSIn/wN
p9QtIngHJrq2wCmtj1yn1F21Xk14oHUTTjE95/Ve6iGu2wNu+F6GU+rVa3N1
mk4lwSn1pOQdeeK26XBKfa/LnrwFwh1wSj3HekdDm1NfOKUuXiuXenSePJxS
X75bdX7srFFwSn2p67oLC26Ph1PqH+vbPBKrJsEp/Y69e+CNo+EkOKW+64Dg
pLGXJsIp9dxzHa6PGthxL3W5QZciL9/UgVO8XvXEVjzlylQ4pW4XXNu/7qoO
nFJPcdkwSDFSG06pqxy+7to3eiKcUtfZelwmdc54OKXuHVO4+HveWDjF7fQo
s/WaNRpOqU8867tl/Gs1OKU+2jau7fCZEXCK57dsrKOBqBKcUvf3X5HfWT8E
Tqkb2Z6KcD4lB6fUz0RafgnwGQCnWK8+Tta679sfTqmLLdnoNuZuHzilnjhs
9iNbRgxOqZuvCJ1QXSIIp9SLBUZtF8oRgFPqkv37ye050Y5xL+43qcF25vpf
cAovjnrBmk9b4ZR6y6ijedLqrXCK84HlipM15ZrhlNY7rlP0KSN/bgudAKfo
HKfU/TlOqY/1F9awnM+eR6TuOGvokMwh2XBKXS9WNbC3YCecUreZ6aPW/7YU
nFJ3sNqwXuSGIpxST/8ksKDh5Wg4pT63cy5jM1EHTqlPi9yqOrSXHpxSr9W+
2vpoKrs/pd9pX8MOz0kcB6c4b/O+baWz9Hg4pa6TnnBkROJ4OKVuJ6cpXfh4
HJxSd61aNEnCcyycYvnH3b5VWTgGTqlb7HhpV5M8Gk6pV+cOqD5zRg1OqasZ
XRY5WDESTqlPNP+e8PSnMpxSvzz764fIecPhFPNzQPL3rhfs8Slu36J37c84
OTilPvCmwQ4vlQFwisfbx2rqyqX94RR98pthNh0ScEq9ZfSjBflhveCUuvv7
1HG964XhlDrviadvxGcBOKXunZoU4p/SjuNTdMmsoUVRrTg+xXouFp/dQ68J
Tql/Ke738PS1ejjFclv4ObxJpB5OqTuvn6iwKfoHnFJPsS4ak3XjG5zS+sV1
is55vZfbySl1xeWXV8tExcAp9bzyT8EOKulwSv152g7p4d/Y823Ub0/sOyR5
jRiPnOL62eRDn68+HQin1G+OO5FeLDACTqkvS11R9mrzRDilXrzluxmzRB9O
qdudSjjYlMXAKXVj43gJV5PJcErd6NfqsdLemnBKvw0lEl+IVrKv91JXke17
aKDmSDjF68RxmZ4vvZXhlLrZ2Tr14cbKcEr9pLPsc8ffSnBKPWRhweq5mkpw
Sr061dJVZ5cinFI3tfswY7bbUDjF7WwXPptuKQ+n1N3j51rZhMnCKXU1g7bi
MlNpOMV1H+Me1U8IkIRT6pI8iaEDU3vDKfWMcwdkpN+Lwil1ntc64/0ewnBK
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
yyws+D6c4n7jXxc8KroOp9RTvvte2Xb/HJyi1z4OKgg7Aaf0/HCdoj/9eXV0
/jY4pR7Cv57wNpxSl/gcsnioP/t5Cvh8rH3zdj4Zfx9OqbdZ33Tv5cC+35L6
Sndl9WP92+CU+vTwe5f1rknAKfXMXr59rafLwin1ySMro2a9HgGn1I06jR5H
amrBKXUtYf8xzTO04JS6WMTwlIIlanCKceKkKZfyecPhlLrFFlOPisKBcIrb
vznYoqO2L5zi/dkdV4zEF7NOqdu0W82S/c46pT7re88p422/wSn1iFMzDLwm
sk5x+6oV3iPzWQ94ft8sW9Up+wh/0+8KzYtTdqnHwCn1sTnNtp61kXBKXS3d
QKHp2EU4xfvk6gd6vV55CU6pX3bzFk9xvAqn1Ndbdr7f1icaTvG5TePrg5cJ
xMApHq/U8x28fjFwivVzbV7io9jrcEo9JntQk9awCDjFcnioVifJXIZT6kHv
d9coJEXCKfWnibPdY9ti4JS6aYioxsrkGDjF/Bz5vSjqcCicUnftnz/eWn0P
nGI+nVa+WhpnBaf0PHCdoisbL1/pdxpOqaccf2zW8xfrFJ/PwXGKzwMYfPrS
VItb7Pvzu7tW2dfp2m3s+6upW0xYpOSj1Aqn1L1zNa597NETTqlbv3VLnvS4
P5xSbxP3L78/WwlO8fqlfvuSlfPZ63upR8y6NKZhvzqcUr+19YdB0gkVOKUu
5qR4n7EYBqfUzyxdsOqnqAyc4nYWN+RfCe8Dp9SHLVg8YXcj65S6jlixXtPg
X+zrJt1dzWDbvZ6a7PvEqUepDNtvrfyOHZd3d/cch+j7w9j9DXXTa/HVZ6+z
2wvqGbY7x32aHI+/8funeZ8RJ8LhlLr9CHmTYVnH4ZR65ZXEaw+OBsApdck9
A+NChobDKfXddd/0j8vdgFOsbwVefQUHRcIp1pOqQJcd+pfhFH1atM/mS8Fw
its5uDe7Zuc5OMV6/jJ2n+m2k3BK3VV1+p4zOwPhFM+7+LTi1p8hcIrbn3ZB
emtFMJzi9r22GPSy8YRTdM3Tww0Vd8IpltvK+A3DdRfCKS1vrlN0VfnAh3Mv
wyn1EP51v+y4l7r/lKSMzktn4ZR6W5DM8OZe0XBK/cuCAstrkglwiuOehuEb
Lo2ug1PqIuN9M38eZa/Dp/6ux85luod7wyn1sNrDw1Y/Z6/Dp674dJSRVeBI
OMU4LuuE1eAlqnBKfXSARuf+luFwSl3ip6NpmvJgOKVu7LixOC5zAJzifk+q
ZI0czTqlrjZH+q2/DOuUOi/ngf50XXZ/St01I1JM2oQd9+J5YV6pWhmxTqnb
HDrtW5TMjhfx/B7ZPLMxl3VKPepOosuqUez2i3qM+5sLvbaF4W/czty8yCW6
R+EU8+/09lR03gU4pe68Zk6V1Xt2f4rl094Ql3f+Mpzi8coJ63q6XYBT9Nxm
l9mfAuGUekXGBomPG8/DKfVhYx7vuTbKF04xn5Oe1UQesodT3L7bgUOPrx+C
U1zfcaPBiWfsA6dYf5Rqd6U1BMEp9cs1MsE5YmfhlHrKLr0LM2cchlPqnoNu
R8Y1s05puXKdUnc1ef9D95Y3nKIPEFloP5z9PAfqlRyn1L39bkneT2XfL0N9
75Y9OVvmxsMppt/j0GfHnK9wSn3ipc/LInv8Zt8v3d0F30bkpuuKwSl1rSvu
ay7oy8Mp9ROZKp97HFOGU+qzco/1vjtdBU6pZ532uK0brAineLwepW9NVsvD
KfYnjTKvfjVKwyl15+eTqtOaxeGUutpyxcKwE+04f0Z9boLsyKkajXBKPSPs
5YFOzy9wSv3LoNaLpkfY15Go2wfLBGkrsk7xvD96bnLtJeuUus6aBTyhNaxT
6oki0pdEfdj9KdaHgy27b9qdxd9YDqNknt6ddRFO8bwsi3QqUAqEU9zOmXaZ
mFO+cIrl/PLBq7Wx5+EUt6P1e+ru7VfglLr/OuOrlk5X4BTXSR2Przqr6g+n
1Hlmm6p8PHbCKeanoNfitg4vOKVuoW83qV8Wuz/F+ai8PhlHasPhFMt59/0b
agsvwinu19D4us3tI3BK/deO3/L3nVfDKS0/rlPqWnL/9fNwSj1F57/r8w3h
lLra15dxz0aeglPqMZ2NbXkXr8ApdYPja1dNPRcDp9Sl6n2/RYfXwCn1loq9
GTPHtsAp9bX6c/VFHIThFLfTr8bvo6gcnFJ37l+poLSOff8pdYmAvT1q5ZTg
lLqFX4pL6PyhcEo9Srtw04BKOTilfvj4ozlVuf3hlLp304ncszdF4JS6zSL9
KOWEFjjFfH7ta7wpl/18JOohK8smWbz+AKfoG2YP8khjX2fE8g8PULram33d
B9NHpk1p+n4fTqnn5Ao+yd96A06xPgzZVVNgGAqnWH8ubHFVKIvCeobHOyGx
eHRGJP7G7WfdSq97eQVOqbtf/+reGe8Np9TF9EaOOlMTDKfUI+6dXJPjx457
qVcanFw8RuoinGI+5TbntwYchVP0b6++VZpshVPqvNIVviq1Z+AU0/uUXFyx
7BKcUrc3sthYZBsGp7gdrQinqet84JS6a6573MMldnCK279oVDojaTGc0nLi
OqXOdYrpjYeLvlAbCKfUFWMXNXyQOAmn1GcNbdU7LxLGfj4g9fmvH7Z5sO8T
px6zb1357ZZqOKVuL379WO5T9n3ieP/iu5lL1Kew7xOnfviCRegqS2k4pR4U
+G1RwMkhcIr7rRuQ6tE+FE6pS4z73LDEbRCcUrdxeDRSSZT9fCQstyXrbz7w
7wun1Ct9NhSLPxKCUzyuiwLjdKfVwymO2yJaihb7foZT6iFteh8LDr5jz/NR
v9rXdXsf9nwGdZ61R5SAOPv6L/UUQSHd657s62XoS1/4fGWuwimed0byjpPo
LTilrjZmr+b9OUlwiuWwO8DY/CS7vcPjFeHpdsSxzxO6nlj1xBZ3OMXteK19
d3azN5zi8Tr52FhMPg2nWA8/hu01DneDU+qu4oq/Fyx3glP03h/r5/ivhlPc
zrm9xtcd3eGUusV14dxTX07BKZaPi0K9m/4JOMXtZI5frv/dBU7xvAwfqLPO
zwpO8bh+W5iofp4Mp7Q8uE6pc51ies51g9QV575cMuzGMTilLpa2TPba1hA4
pW505rdaYWMEnFLfu2J6bY+Mt3CK583XZPG6hh9wis+7uqOsriTTgc+toO7/
SVbvSIwknFKPyJoa/+PkQDilbjpk5esqp0FwiulXjesX83sAnOK8gVdiy2DJ
/nBKXbI2eOEPITE4pd5SE245Z/cvXMdJvVK9ZETg+G9wSt17/7DJ8sPfwyn1
kLuy84r02fPx1HUanBL85rDnO3E7QtYWbmaP4JS6efRDLT+BGDilnrikLjP8
TBycYvqPgxJHtrHnZajvWLEococbO76nXqunOVrSlHWK9eeamLehIuuU+i0b
tTmeY3bjb7zuK9oyrjTGFU7xuIy1I5XkXOGUOm/U7QdDUhzhFPd7VK9j/4RF
cEo9ZejRt/FfDOGUes6PANM99vZwiuV/YHD7QtF9cMo+j2+dzq1ygVPc/rsd
jtIOlnBK3WLyh8z8jIlwivmc15am4qEBp/S4uU6pc51iet3iORo/rbE/pe6a
eb74zvMjcEq9Jf3ejeR3gXBK3fyVb3Putitwits5Lntl0nr2c9moSx6fsaS6
+QucUo+p2SMQH/QLTqkrHhc7uHSnOJxStxg2JuC2qjScUr/VMaBJfcQAOMX9
BiyWF94pCae4LsZabd89j15wSl23dVH09o094BTTvztw1vF2E5xSD1E87vEp
4gOcUjddPGDquHr2ejLMz7JO10oH9joe6sLKzw9GTX0Cp1jOJYZC7z88hFPq
/nY/BB3M4+GU+minL9Z7R7Ovd1PPyvffo7zwPpzic6+zH+udC2CdUhdb/b1P
tgXrFMu/X+0lq99hcIrlf17502lRF6yvWD5CZyZJxzngb/qdUjIjv1rYEk6p
80z167Wuj4JT9MVSp1yfjIBTrG/mH9Rz3gyHU6znrXsqrVvN4RT3u6fH1yFO
y+EU0y/UitjgNwNOcb8GIysinYfCKe73onXOAlMZOEUXsp+gVZ+hT07p8XGd
Uuc6pe7Kf7+bF5xSFzs1KSxWwA1OqRtFHpPSa/eHU+o7Lo3/9eVWGJxSb6lp
EN9uxX4+I64Lu/zunZXZJzilzrvl+mvm1UY4pZ7d+0x04g0ROMX7iZtDFQ8+
kIRT6nbn5TTc9vWHU+ruttEX7wT2hlPqEabDaie/EYZT6il9xW9b2rbjfUq4
XqZk9QiRrz/glLqzSS9buYesU+qlz/f33dZeCafU1b50aslas06ph/SepmxY
wl7nhOcrUtlYSuUenKI7hKs8zbzJnm/u7nPHLF+ZtIF9HQmPy/yUd9vcBDil
XvnE7EfioztwiuflbfRmnQdX4BT3W7Lw5vwSNzjFerhqT/MCu01wittZPT55
iLwZ1mPMj7p78bMyVfyN+VEYMXprvCCc4vYPXiuzel+sT06px2ipJdyxy9cn
p7ids7GXgtoE4BT3e2xygeseCTjFfMoF6587JQanuN9Qxvjxvjp9ckrdu2nc
n/tN1SenuJ25mfNDlO/BKT0OrlPqXKeY/m50Tc3so3BKPaVU/czG1ez3TFA3
/XI9dPgrXzjFea3h89Z8zAtmP3eYrscMk56+QIH9nFbq9h3Jng5e7+GUusS6
bfNfGrGfN4j3Heq3rFx6nv28QepiFoETYy36wCl182TxY3N794NTzP9UgaRJ
TmJwSn3W7ca6YW97wCn1a6k3dc8O/AWn1FMlYqfuUa1n35/W3U1ib57tMeEj
nFKfqCR++P7Wt3BKvVbw88ANTux1tHheRO8l9h77EE6pK0Zbqy+xuwWn1F0j
R+roLboCp5h+48mzZ8PD4BTTX7cMan7Pvo6E5/3Ip9X22SFwiufLwL90zu6T
7OuAdDtfZ0rFiOyFU+oxUrX7r9WZsMcJNL2oSTFvMwOn1Hn5xzas/jAc6zeW
Q0nWoN0rr+nT39xOTrmdnKKfKlTUPfdOn5xyOzlFtwlfFK2boE9OMf/3qv/c
fgCcYvrtP/idnGJ9cx9brzH3PL6vjeaX65Q61ymmD/nvfalL4JR6xGyTJJMe
e+CUeo+MeFv5h6fhlHqiod9R98eBcErdZF3vRVN+s5/LTP3w161XZxysglO8
HtB54vpzzTo4pa4eahPNK+8Bp9SFhy6SUPIQh1PqWe4iYTv39oZT6hlCbYVr
aoThlLq75aeCR8868D58LDeVOZMERJvhlLpE43RHpdd1cIrHKzVIrDHlE5xS
93Q4LGnn9Q5OqZtOyQ8MrGeva6d+0faR2eMg9npi6hb7x8q9dEqAU+o7dpv2
9zkWCafU7YOkzre0s9eLUI95lNV7QiHrlHqI7dFn2U9OwCn1FEalLuGCM5xi
/dk0QWx4kxmcYnrBrbfKJ+nCKaY/EzxN/bcsnFJ3nSXx9cTCWH1yium7/6P1
ntvpb24np9xOTrmdnKL7Tknd5GiD71VE3x1la3b8FL5XEY+3ojVnyHdffK8i
Hlf9ViujJg84pfniOqXOdYrpp50VVBPwhVPqIY5PxALv7GC/V6m7W0QlfQxf
4Qmn1J0XHN8ooHkWTjH9wbr0B+PYz2enruaTNaAwkP38Ylw/Up8fKXf+M5xS
54lO2N3jYTs+b5G6kfj+U9OK2M/ZRu/Y73RBTQxOqZs6mpgkJbOfh089JUdD
986NX3BK/ZiXwOqlgxrhlPqekqkzdG6w4148rjLxKMV1X+CU+ugDvZ7XHq6C
U+piLkKWB7TZ95Pg87ccn/R9J5UKp9R/OaWXWJXfh1PqmSLCfj192esm8XkG
Dmdq5Kayr/dSd510LnJ6qz+cojOiDwfv3wKnWD7HVl/P6rMCTqkrWsVFdi41
hlPqs9LGnG04XaZPTqnbFzrkLKvJ1ienuF+OU6yfHKfcTh64nf7mdnLK7eQU
XXDxObPx6+CU28kpt5NT9M99CiI374VTun+uU+pcp5ie//5x1il1+0PXg52E
tsMpdd6CZeNUU93hlLrrwnD7k2q+cEpd9rhbafj953BK/fKkQ1fOMeznklM/
ywSHP5OshVPqA24MdC5t+Q2n1JNEVJpdG4XgFOOamqA+zT2F4ZS6t/iK8vvz
2tnPO+vuaq/ejVh+pQlOqQ9ZdClljudPOMVyWGN/cUrpVzilbhqmOk3n4Xs4
pW6RzBgOu8a+T5J6imxuavbi53CK58tKPfpoK/u+HeqSDdabVWPi4ZR6SMSQ
lrZeEXCK5/fHgea+w/zhlHrOzuJAmyO74RTzednFy1lyOZzi+b3waeuyVUZw
iukzk7OyzBTgFNMrnz0wyycTTjE/J+Zo3j0bCKfo3f+RU24np9xOTrmdnHA7
/c3t5JTbySm3k1NuJ6d4fuX2v+3jcxhO6X64TqlznWL6HMX+BaXL4JR6inTO
rN7q2+CUeoz5KDdn8yNwSl1nab9Bkx194JS665eFxd/6pMMp9VXCwcJqBuz3
E1CvDKsxCC6oZj9Hnu73wJSy9IcNcEq9VrNzAE+6E5+Xiu+bjVY+MdFZAE7x
uFRz1onM+gWn1M1/ml+/FFwPp9RDpCSDg8Z8g1Pq9um2U6erfWA/74N6ZKGW
4lr2cwGwfEb731uYwb6/Gst/Vby7iCX7flTqvLC1fZeIsO/Hw/zczeyxsR/7
fiEs59VRL2aq+MMpde8jtrwRlkfY66Tpc4AG2MtaGjvBKZYPL6Y5TY0Hp3hc
i575tSSMh1PM5zPXJYnzh8EpHlf3f+SU28kpt5NTbien3E5OuZ2ccjv54Xb6
m9vJKbeTU24np+hzR8VNer8ZTun2uE6pc51iev7nPByCUxw31338dOjoVjil
Xmtr5mc84TCc4jpl1eO6+6tPwCn1iQZlB+8Zs997RN2ct0NJo4H9PhLqEsNv
7+u54S2cUs/UD2n5JVIPp9RtVpwX+rS+DU6pxwjNc2utacfnqOL9vmsT7jgY
NMMplsPJ1Zo7YuvglLqz3vNTa2fVwimWQ+eCAboz2O9VpB6SJazKTGc/x4R6
ZdCJdW8XP4JT6q5SqxQsB8TDKW5Hx2to6rkrcEqd5/hF8YTTCTilnuIqaV4p
4ganeFwZJn5tVVvhFLd/M23sb29dOMX0D6QGv3AeA6eYz0ZXLXsLSThFPyis
/XBGiz45Rc9eoXYwUQTHp9xOTjH/P7NOHR37BeNePN5b8g3e7Q/xOhJ1xfG9
Z+emJ+J1JMx/sd3PDl9nvI6EznGK+53Rc5f3mHW65ArP10uv5pJmR4x7uZ2c
4va/GTQ7jlyJcS8eb5ZJwF4LSzil/x/XKXWuU+quM2S9Aso94JS6mvSQ9Dm+
luz37Hb3oIOdY2VGs98vQz1vr46+wcyjcEp9UKmdXNylh3BK/eThr1rfpmfD
KfUKeUH72gD2ez6oH1Set3+ySR2cUjdJCahs2NLKfp57d4/5Kv1oc+0vOMX7
7wffm7xlWQOc4n0Pvimr3pz4DKfU53rYe5XEvINT6ntHiQkKWrGfz4XlP0ND
26TyHpxS58XnBfMk4+AU0xs2SG11DYNTLGfeEqFBozzglLpz0M8dpdv3wSl1
0207n/ZUZb9PnLr9wec3F3yfCqeYH+193u9UNOAU8xMnu2V451d9coru0/jZ
Q1YUTtHvmz28slQa+1N0d1l1D9ExcIoeoX1pZf0oOEXPWjpkzJsReL0X3WqI
1s0TVXCKXvhG+PXlSjhFP2McL7O7DE7RjfU9a+Zs0yWn6Ov8ZQeG7IdTLJ8X
mV8Xbj4Ep+irhngeKN0Fp7gdXWOHOyns8Sm693L/JRIL4JT+neuUOtcppn/6
3+exWMEp9Qypv51SP/HYbsqz+t1wSl1EOfKwbvYROKUe8ePWxDBf1in1WeUK
A+ZsYr9XjHrT+1EiJVfZ7+mhPlO26FJ8H9Yp9Vp97aUGKs3s90l0d16x6oaK
E81wSn1U3+KOc2E/4JR68bdFXzbVsk6pB+WctMrqXQ2n1KtvJXz8NZb9/Ds8
rjGvDFsXpMIp9ZzMhT9qs9nPXUL/uu/np11RcEo9SkW3LvHdCTilrlhmx5zu
4waneB5jDsVpeVjCKXWLFZY1sgWT4RTT6x/emrJZC07Z6ect0jbSwv4U0y+z
PNJ3MjvuRd964nh0781wSt21UKO3aOAuOKVurzL0YJSLE5zi+bpa0m/P0pVw
ivV29zzTEf21cJ6DesrIg8t9H6nidVXMj923ze9P1cAp5seqX9UJKV84RT/p
mDb/tj+cYjmUDFId9TQITvF8edyXChENgFPqlXvzLeZvCIFTdIVVT86ND+v+
Xu+E5C5nd5MF1vy8G6anrUt/0793+dXQVeQ/4De4jqlremN0vG919X89HJ18
0/iBOvk2zVt05VaoEkOdfIu1rdrrPFcbnXy3vpz0MKTXWXTyvWFb4qDoGVfR
8f2nS9bN1FDJRcf32Ql83pI/sgKdfFdey5c7pv8DnXwnOtuuvPC7GZ18Gz0f
uFBaqwmdfGe9SitLPdiITr7n8lKFBnd8Riff9jvO1Sx0qkQn39XuYsHaxcXo
5Pty4pTsXmMK0PE5flYewdMbM9Hx+WB3lp4V6fsEHZ8v1Ptl3sKjiej4nBP5
LasS9gah43M8fA8Z9etzEh2f+7v8QGzPiRboeF/q4bc9Lgydg06+hSPEskIW
zkcn3zMuei0bGrsUHderv9HlmZxnb4d8i22I6iW4fDw6rtNT8DUstVJEJ9+J
zT/Ljyun6lPHdRebQgxvit1Ax3l2IecGr7ozWJ9xniWv84Xk/t3oeP1Zcvao
soPe6OS7ViVf3lTOF518W+i6hh+f74SO400rzVc67+3RuftZ6uRa0O647bqF
odjP0r/TfpbcUqf9MvlEX3ZKIUDOGftfOBvb9LtIg93/Uq+eVOG9xJXd/1Lf
s+ll300n2f0vdXW1jnT75ez3BFPXPd0zfq7nC/Z7Lrt7p+fKJW4j2e/Poz56
eqT1VoWv7PeZdXfzy6tctE81st9X1N1reyxOurmnCT6p7+3/SnjlTXb/i944
r+V7jy/wCU8P3i1TiWH3v9SPqmq9XePGfs4s9VuGU+rbZ7CfE0o9cVNrzJL4
ZPZz92g+lxjL7PwRDZ/Uj/vlHT50wZv9vB7aTngXXc2ZeoT9XJLu7moopy6j
YA+f1GMMFR00RBj4pM57sfTS9KnT2PeX0vR+bcma8rrwST3kxswWV2NL+KQu
OWmbx27rXex17bReGXm2Pvx5ED6xHHJdsmcf2sNeP9rdTceEqzg/3Aif1HXM
syqKo7Xhk7rFtTD/3r3GwCeWw5136Q/P9GDPM9Hta95t87Y/j/0v9bQ0kZ/L
UkOw/6WuNlsnYqDyZex/Mb2sRIml1hXsf7E8F8ftlhx2Dftf6pXX7095euYa
9r/Yz3L2j4H89TEh2Ua11CjAzw/eu/zFd+9n2d71+2b3/lSKs9+8mpyjNDev
ec5Y5u/pg5M/GaiG5K0/wumnktuMw77WRoewzx//v1lJZi5CutbtqehDu6Zn
tgrLt76KZJ+/YV23zzw2WPVB8lAtulzX/DCjh/dIL0mq50x/kxE78Oxq9Xh2
P9vlPp6pu19wYKZ2E+d2Ehi3iUn9x73h7q/vMzaaCr0nxH7g3H4ys8Mjodfb
Xezz17WdeMQ0OJypfqpXxLnfVMbq1ZmToQdZD13bjydMimtFqqLCM878pDMh
ASE7PoUmc/b7z5jLc5KOqJXc4Mznc6bl8Jq1Cs99OeOBF0xbgkbKdG92+6jA
/53NtHhuvzTg0nLOOCGHWfFJ5Fg/v3noXdv1XMbLfrNCQJ0pZ/yQx+iVuaS8
0TDjjLvymSAfN4n2rzM544oCprJhp8a24+roXfuZV0yMiqzljoeDOeONP+uB
VNmNhA339P9eD4uYvT9ezA9RjkTv2s4VM97NzapS3sexPnet/3/2s5JVNbLb
2f1m1/avlDFf1di2ztUHvWt/VcZ4C9zrM1LaDb1ru1jOSApvGLzx6XbOOPY1
46q1rtNHeSV61/aygrEaNsRm1RdvXXJI/+69NtU/+MRxXXKI8UKDhl3kgtO6
5BDTz8nRskozg0Nsf0q+vTf87ACH1M+7F8g/sDwIh9T7XCr/PLIkGg6pu1Uq
3Tn16wkcYpx7av652i/5cEh9/eXVwrG/q+CQuqikpuJ3oZ9wiP3ypLJb62Y2
wSF196a2yfsvN8Ah9SkSbQKLYr7DIfUdc58MdrxYC4d4/k861Mrer4RD6ve0
Dg3tsM6DQ+pzS6T0b/R5DIfYb56JMr5lkACH1P0fhAy1+BYGh1h/JzECVlc8
4RD7tfFVuitN9sEh+pI3sTqm5nBI3X7l0zdfvunDIfY7Yv4vtmvqwiH1wnkj
dy5StYRD6rMmJqyYudMBDrEfSVwnaX1+PxxST1E/OGCX9F44pO6840OdQawj
67C720z1k8levBAO4TJD7mL8kHFwiPs9n2rdIKUAh9R3en7/czxbpE8OsT7s
WFk///ZFXXKI5XPnZL93wy7pkkPqEZHKw0QUw3XJIXUj5+b5CzWv6pJD7N9X
7Do2PDqCs7/7c/ses99cPhGuK8nfYf97HEqdexxKnXscSh2f7xvY2Z6prI1O
49wdy3XFOsTOotM4d4xpwzaRflfR8bksqyo++cvkouN6pcqym+eGvkanca7N
y8LQsJI6dIxzNXO2u95pQqdx7p1y4XuCYo3oNM4Nz5Md0y+hAZ3GuVKaU7Ya
hH9Cp3Guq03Hy8/qb9BpnCtb4ujw83oROo1zRVYMXGCXlI9O49y5NQ5Dg+2e
o+P63+s3kirDnqLj83IL1sg9EriHjs+rHLd05NMXF9HxuX+1lv6jH59Ep3Fu
ip8Sc+/jSnQa52Z8GjbUxH4mOo1z975bduyh2xx0Gud+iivcOX/eInS8nzpW
9ui1KCN0Guc6T7icV6EwFh3vX5N60HPzFRl0fF6+w63Yu9NS9KnjenizcD/r
TaHoNM614g1pfPjYB+szjkNPDQ+95mWLjuvlymwtHSedRadxrt241zdv7T+H
jvPRotp9DiftRqdxrpqlw6A7B3agc49DqdM4V1rqkv7TyhAcb9K/0/Hm347u
JOcljo3elRaCvoi/XsV1+z2K3nV7N5Kd77c3n/w5GMuzy/uVZPcRVrdO5Ixn
3fEX0PnkDUeWhqXdPcXxeyz517SPJZdSL6EP4i/obcx0xdVRd3uy660Uf8H5
MlfXOzb6ry3huAtlFg4QCza+84Xj6xqzosf5iGHnGjiOYhh/7dUbbD0aOV5u
MYlPhgks7N/IcZHIbH0k3bHh6DfO+p/EJEkaunyIe8dZz1OYNcufh6f/LuGs
z4+Z6DtPSkyMXnHW2z9OxQ3Kgx2zOevnU4bn8yN/y/UM5u/18I/TwbNsvE4+
YP5e3zIZ7Zav+2dPZLd7XetVFiNhlqK+PtWH+Xv9eclMvb5f6OTt7ehdW+Uc
Jm15jsKsxwvR+TfTlsNcFSqqblRhnbrxd8S5TN8hT5ZLbDFF5z+shjzmwZDt
I6vFZ6ML85dQPlPg3GFvu1AfPW3+lz8/BYxFTfDXjucK6Ef5G5Q/y6tgdrD0
KAl0463Vf34KGYuxsWFPTW7AqRj/gRUxDdNe/RnfBqJ37faKGclCd58Kub1Y
nz35G9w/+9WyRAOfG37oXbv5UkZl3rcQvXi2S/BBlv0ZZxYpjy9wRc/i/1fO
DJzgpTvPfif6Sf6K8prhtT3dULF4CTr/4aZVMEvTM2Ys/+CvSw7p3/dWLd8x
2fGMLjmknpg+Tq3y5XFdckjdyEFntt/IVXCI5TRdoUaqbSccogdVLb9mfggO
4a840Objk9twiP3AAFHh72bP4JD6qTdfh4rPLoRD7Ffbe8zw7VcDh9RrJMwr
JDp/wiF16xhNqx/FjXBIPerIxuHzterhkPpo4TC36vdf4RDr3e998btaP8Ah
9S9lTxY7j6iAQzzPr3O3dgpnwyH1l9Hjph2zewSH8Nq6/Megtng4hEsTK+tJ
i4LgkHrvhzz3u0c94BDbobqa801vXeCQur3pHHOV76ZwCMdff3/V0J8Oh9Qr
m7w7NohOh0OMU4IPZ969YwuH1G/F1/iOv+gCh7jfpKJ7svGH4BC3X6AxaKzp
ftYhrZ9Dnqv1nbcdDrEcRD9q/bw6Cw7h5ntb2u6wcazD7q5ocJlXVioLhxhH
pP/4M75N1yeHWG8fprQvMwzTJYdwP2aKdadruC45pH6517aq/R3XdMkh9Z8L
0370d4vSJYeYn9nP5I/nRcEp/dbR59ldvxvB2Q+y519ovEv/zj2viu3rwnxR
HfEDeF2X+gI9S9lhLesx3qXu/d0v6bwx+7ou9TsnKhd1bmFf16VumxrW3zwp
CeNd6tpbnN1eyLOv61I/vLqhrXBDCca71PfMUWtyCP2M8S6WR9F3z5i0Box3
qSfJfto4sL6R/T7p7j7SN/9Y0m32dV34ajHpiOvLvq5LPT7+xEJTwfcY71Iv
svhS7q3x/74nrLtvnv/ZROBROsa7GI8EWYsdNWO/t4b6L6Ml0kPlYjDepR5e
PLr3uXgfjHepR3yWKN+WexTjXeq81oOnF811xHgX26VVnaWBC6ZjvAtf4pXD
eizkYbxL3U5e/f4ZwekY72I9WSBzwvSpLca7GDfdMtTI8mPf70bdwv5wfFDP
I+znZXT3VWoRTgPF9rPvn6fHVSboKJNhh/Eudd303uFx7VMw3qVufntQuaWf
Fsa7WA5GTvuHbxHFeBf7qf4ne/kGB+N1XezPDb9OiWkOw+u61K2aveLkha7i
dV3qcUxVyo2j1/C6LsZZyaHHHHbfwOu62F45fHZ8PeOGbknX/iKZftPx5v86
3/r3eDUx2fzetRVHZx37n+dbafpXXfur5B1Pd/aeGh3yP8/D0vS5Xfu97uNc
Qc7rhP8eF3cd919L9v6VPa2wSQ3T/6/j5a7bCU1OWKxy4rqUE+d1RfZ8Lk3f
1X2TGxJT/WQnnOe8Xs2e56XpR3SNC5K9j5z6ui+ePU/DPf+LcUDX+IIRunXP
8Fsx+3oK97wwTS/fNU5hAhaGbgs2rmJfR+OcL6bpu7Y3V5i+nltanw/8yXnd
mD2PTNMHdY2bmFlanQNVzNjXsbnnl2n6ru1NHCPxan3ukN7seWTueWeavmt7
c4fp4Sb17Ml7dn6456MxruJvb+4xIco1Di87azivV7PnqbFf5G9vHjKZiQZ2
nvbs6zXc89c0fQx/QTxiLr6YcuZeBfs6FPe8Nk0/nr+9SWWsa5+M0bFmXxfj
nu/GeIL/D0+YWTuDbp48yJ4P454Hx36Iv71JZ2btUu9nLsyeh+OeH8d2hL+g
nzEf31oveDeBPV/IPW9O00/lb2+eM0Y1L1V/7QjE9Nzz6dhv8RfEC0ahj6b1
7eBjmJ57np2m1+dvb7IZO7dVb/SPmWN67vl3bI/+22ztz2EeXIhdeyhqFqbn
npen6cP4L5zmMqKdD3jHTNjzCNzz9TQ9f7PulMdY586NvCm+ENNzz+PT9Cr8
DX4+M99zyhfBQgNMzz2/T9NX8wd4BUxlRtyaMxLseQfueX/sR/lP5CumWPh2
/TMFaUzPvR4A437+f4WMwE7L1alH2fMU3OsEaHo1/j8UMW0au3Uefg3+n9cP
0PT8p2VNMePuktSrddUJbJ9p/0bXFdD0kXyoJQzvwPUh7bcP/c/rDTD++G+1
XVrKzO1h8OLOrbP/8zoEjA/4C6KMGaLwbkThrtP/8/oEHLfwB+TljI1tRLpD
i/P/vG6Bpo/mw/tzvBnt9Vquauv/vJ6BpucP340rmOpPFQOSqw/+z+scMK7l
P/FvmExFt5aN+y/9z+sfaD9K/z/Tuis+IRv26tL+EvsfESatOsFPl/aLeJ7n
/ne+xgD7P+p9O5d27Jxni/0c9Smr2/qO2bwf+zOMb69KjDKWDcN+C8t1ZlWs
XM/H2D9RPzdIqXLm8Fzsh6hPGGZmq6xaif0NbmeqQNU1me/Yr1B3U7ip9lSx
EfsPHAf5PLxyQLQR+wnqTn0inihn1mF/gOPTyyLeDas+YbtPfceQgoBnolXY
vlN3eC+zp/JCIbbj2O4OMq8ruvwE22vqaS/DV963S8J2mXrWg6LIm6Mjsf2l
/nRF/qwxfb2xnYWz78uXXTx6CNtT6jaHrVRDvOyw3cQ4612E9vPZ07F9xHhy
uf2mF148bAcx/xn35c1HmGN7h/Hq0sW3NbIcsF2jXrx7TXPIQFdsv3D8EvDm
t3z/Q9hOYT/gskZURmE3tkcYjyySGdlHfwO2O3D8ZzMfMnEyti/Uc9pO9+z8
MgrbEepX305wSBksgO0FtjeB2wRbQ0J0abuAcbtu7KydIy7rkn9svyMObfHp
EaFLzqlvryveo3IkUpc84zjCULjvboMbuuQW43+LuKdZj67r8jcjHf+OV6lz
x6XUueNP6jTOFFn+/tXqtknoNJ7cUnd+kYXYWXQaN24d5DGmT2k4Oo0PBT/X
z3cRzUWnceCvXTMiDg8pR6fxnpb877jiXXXoNK7bG1H+wnJPIzqN34Zd97vS
52M9Oo3Tij142X4/2U7jMa27s8LazT+i07hLyjp7Wa9dr9FpfKU15Gn5J/dC
dBpHjRecdWze/Hx0fH/uO/nzppXP0Wlc9KOgb7SxRgY6jX+yr8WPPbHtPjqN
c35drJ4352gIOr7nKGHBlQSHU+j4vp43vNLnJ5eh0/gk8MWIEV/eGKLTOES0
z2Hn1mez0Gm80XfWQp9xwqboNK4wf7P4N/NxGjqNHwQ15u3yvzsKncYJHoLD
Lt6L7YlO44GgugHTTr+6p0+d9vvVN1vlfPzc0Wn/fq/yzsYfK72wPtN+XGNX
cWLStMnotL82KEib3zMtAJ32yy9P5krYpp5Hp/2v4u/H2wJFD6DTfjYic1pq
XvsudO7+lDrtNz+uTioKdWTP19C/0/ka+vu/17HaYm4nD3nUeNRdKvyvXp4S
m+x8RnxsVPUkdL7H0OvJJkuiZ4vsY53yXz9LuZScGbNuzph3rFP+63Yp55JL
Z69ovfzmDHr1f7PfcSB5jJvG0cEprNNV/60/PQ8wfoK5T5Z8zkEf+d8T5naO
kT84e7tEZxk6f78aeonZ+NLMfaIV61TpvyfS7TrzeEba9ajNrNMz/63QsbFM
lWD5A7GvrEf//ziG3mYc3f3Orm5kO38/7HOXcT295J7bLtZpyH9Pr9sDpnp8
uvCgiNd/e7ybwhhoZh5XOF/4t8fYx8xmuawDK1fk/+3xWhpT6dGaIiqQ9bfH
0KfMxd4je5pMy/jbY0AGU1EYU+x+/P7fHn0ymUC9nQVJqSF/e/TIYt618nIM
z7FO+auP20vmZ1q7jpnAcnT+/l8vhwk/vvNFb8bob49TchnNpYe/yKazTvnj
gkl5jPQem/5yZQv+9jgun9E+ECcrMUYXnT9e0Cxgyns+Le4MVf/b46hXzMjJ
62cGLhRB548jRhQy0esCtqmnZ/7tcXgRoySyc1OWhCc6f3wxtJixVl+T3f/+
bHS+x0ElzNKTeUeCZ+pjfeaPO2RKmRAzoannslmnfI/9yxj3xmmpag9Yp/zx
SJ9ypnn3qcbB+qxTvsder5noGfabpvR0RuePU3pWMAlZEiNebGSd8nd+gn/G
Y5X9Hz42DdElh1gfF4vu9focqEsOqb/Mber7yvCQLjmkbjPO+7hD8Ho4pN5r
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
O/nt3l+vIcQh59vNnh/jiPFWmW67iyGgGj9/Mri+2XddBmHcVWxD/KoKaYRx
4bmxme/GetkN1eh6P1rUpaV1ZhP8sOJm1AqWr5mE64X7i6KKwrphXuxn1SQO
N3C+gOD/Vx99ogKo8gj+nxNMdEhLJRPmkW7sfJYZVzEhHki8x8Z4f5RQ4NQk
Njc69+137pLRc8SwT3DqfRqh4gj+xXFctVLVTtqP16Lrvaw05WJ+2Rt/x/yv
PevXbfuhlxBAoYeD9P4DR0q8ZQj+DiTFc0prDpzPZbCoRf53XNnZf/9EOIV+
fpLQy2ufzqVHIRz6uZPz/fz+7XEU4+LnjqrKnwcrRNcSni9qql4dccSnFs/X
mkirXarpBP3XbY/VpMimEvTDOBknnxXwKK1F16Wq/NQnNy2bcL1nq6cM9B9k
Eq4LxsnLz8NPO9WxP1/yRtHdUCkg+LldZ/uO8oVcgp/hfpM8aXRA8Vctmsen
617/MHQqIswv3I+pPj4+EeRei+JB223v6GRgCaCME+fkEKs8zxtk2FdCPGy1
WcyChhv4F8fx01kZwr/rdz3yg4jgPfu6Kj8kD6+rlEtGWfZUCIUe/JywVqqc
96m7DYR10HZlvvblCjwvPKLc8tKF4fj7on/HvfBtg9d9iWiKcflRnBRttDr7
wQbrh7ii+Ngere9YP4yfQ2VUibv31iM989lWu59/SSPoh3Ficvfd14eD9ei6
Bm+eNwBd2YTrfaSiO9SxuH5R2h9qmCfRI5dP8Fu2+4VbFqxFBP+f6CowcrIt
AZTz9SgofnifhD7i/6Rcd3TnacJEVjcR5rG+ZRft4d1NyM5PeZN7JS54U+hh
IY2Gfy9RWhuMcMrnwD/XcsY0zjQi/9xIzT3lTB1OoYeDlJDNbZDhFY2/B0vx
vPeznXSKTTRNSA+cF9fCNGUntkYkLy7xIX1dfxpBz0VrO+bedVmEcWNz3NRH
QnMJ9jN452fMsZAJ1yvvctKG3qeE4E/Yf7b7p7Y3l2Pc87pAaFGuLeJZhfja
Ne0+v7X9KXAW0inXc+O7y0MRTunPdbdzlVmZm9F1ZWaIj+62iKLQw0HKzteY
KLmUgr+j+1ce+q1zd/0u03nsh4HpRzuHhDIIelQenaD/Uk7UA+Nch1rD22EB
+43aSlPJlZRDsJ9NQeLO1o+FhOvNPtdQ+MikhOCftvqwp2pkV8RDi86X/sYn
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
hdjd0Q2QvRc1NRdMAJuw0FdXdDD+PxcRwd8=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
qctjbe3lerCeXmT3C6yVwv8q/mLRXUX/Kvr5UqxpG5izoi8Q/Y/opaVY39aL
3qc6/r/+Lx9n0BYVwSNS5gmCEwUnV2rtFOwh6CBoLthfcJ7xAYKOxi0Ep6rv
DxQ+Q/gk4YZOf6Kggd2tBdsLdhAcbryjoKyWxp/wKUrbUvh/gm0E5wr2c9mH
2m9bwWGC7ZzXCYLdXEYrhxPWRXCw4JDKkKE+SPh05f9FOuRskK+Bn3rM/M3n
6ZCzIewsxW0iaCr4VO4F6ZDTQTbrWMFx6ZDJOlpwTDpks45x2BH+ptqCds5j
H9pFsJdgb8E5gn39bWc7vJmgvTFhp7jt9xScJmgkaMw3GJPXqQ4n7EiXuZPg
KOM6gjaCXQT1BWME57ttRgk6CToLRhsTdr3DuwpuFHS37NdY+3UT3GBM2HUe
B+R1pet3htO0cl/1dH/TNhcZU99B/ga+r5f9qHsfwdGCYwS97Yf7CrcLafq5
H9oIRlbGuKQeQwRnVkYfkn5nQV3Bscb1/B2Mi5bOt47jHe922lXQ1pixdZzT
0Y7XVsZ8OM9tQB6MzeHuV8bsUJdP/w8zPtvtdajb5Wr70eeD3Qa03QjnQRnX
OJx8L6yM+UM7Ip91vKBtOuS22tjdMh1rPftAJ0ELwYEO446Au4ET0nHX0EBw
tu8XOCsf6nTbOr9dnOaQdOwN5HtwOvY53K3TsU+zNx6Wjv0bd3vnxx1GK+e3
nevBHsbeeJDxVq5jLYe1SwffT53OcR77CToImgv2T4cMYxdB13TICYK7sb9p
fWtEvGLIDuKHTOSydPwfu0PwTynkMo9TnOX2u9Nzl326rtt0V7dRM8XbnboL
n+fyDxCc63pRp+9KcU+0n+KclY6zCt/wk3mj/eX/TSnauyk8ofDejsf4ree2
Ptbl1/O6Usd1usDtS3uf77ajHy603+GCdcr/RMKKIS9Je1Hf4W5H6jvCmLCR
Du8o+LkUY6JFMdrrUPcbcqxHuS7IrR4hODIdMqatXKeeLv8I9wNjpaXbvqXz
6uL6EjbA7Ut5yLcyRjunQx60o91j/J1dHHagvxnZUNruLMc9wGOHOsGT7eS6
MB53dJ12dNho50W+Q50HYw2Z0zOcLzKs7d1eyLSebTeypScJTk6HXGw7h/0O
D01bFEO+9XTn9Su8Pt9fjH2du5O2FSE7e5jncF+vR6wrp1XEOZ/7g1Mq4n6K
+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
oY92OuR7e/g7bvR3H6kO+aMyxgdloluOTvoR8v+9MubSyW6bxg5HN505f4rD
GtkPHe4Wrhdtvaf9iNfdZd7gekxwG1GviXbTNyNTIVdLHsi2Xue+HJ4KOVy+
e7TD2tvvavcleJjLvs55tbPfUPcVeY9IhcwdsnfIVCKjxX9//oshL4QsDzI9
iRwwZfMPERkBZAOYn9yTct+MvCAyhcgPIl9GOHm19Zjq7+9H1vpytxOy3oNS
NbLykxyP8Z3IsIPZt5GNPkp98Wdl5DfV8S52OtqO8co4neb2HuTyEvn7yR5H
jLsx7sMrXQ/6/Cq7u7l/GKPnOy5tndiSuCpVYwOF+ZHYlSCMeXm06rm+MvbA
S1w++xPzgXkAP4Le4Jeu312p4GvuToWs9ov2Q4Z7hfsPXVHsMcC7fO308D3o
IqKH+Yzz+yIVvBX481ToUh6j+vxVGesF7m88Lh5yvkvsR77wcZ+lQn9xkfPA
vcB+n3jsUJcHUzH+HnZetBP6uY+47dC9RS/36lTIp89yO6GHMDMV43GW3bT3
Y07DvITvg7+c4fZI2gL9yp/c1uRxb6pG/+Fu9+181yOxhfGw++xexxvhuiNL
z7yZ7foNdh6UOdzhs10+OpuJru061+MF1wU9zMvdh6yVg5wHfdggFevICa4H
eqCJPi74rVSNbnOi6/yu49EW6MuiA9s6FWsuazD8FuOycyp4IMYU6y58D2sr
Y/xw+5EmsUlEGHzHZrn4VPAjF9h9qP2IBz/F2tTLfbLW9Zjr+r7pdlyVivGa
6BJ/mKrRVUB3Ad78k1SM0eVuJ/SB4UG/T4VO7zL7fe9+e99tQdu/7rzud37o
OiT2khL7SW843uMuf637+WXXj7H1aip0ZGc5D9wz7Ue8j0shU4Fs53feb+HZ
4RPgy+Gp+W50dDc6Pfq4fzi/9XZTx7/spt5/200//+f09Osmu6kretfoWNN+
6FSje42OL7q+6AHTFuhCw2TynRucL+2ETjVh9A154E70t8mXcUS6Te4DdLMp
I9HJT3T0/3G+9AM624meNxjda8Y+esvoT9Nn+GHThzUGGwHYBmDtQe8aN2sG
fuhqHy/mZmd0uIqh08w3offMHCI/dKZpR/Sc+WbGC/rh1DXRkaZs1iDyQ+eb
uUc6dLsZU+hCU2/mIn7buN7o3R/k7znEbuqF/aN93RbYP8I2EvaysKfVuirK
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
n5n/ndimRh+Rd0D4P036nvbDVi5vZBCXsAvtt9nOdTbOI5xLWPc573DuYe3m
/NXPfb6L+32x74q486Fv67p/WWfhseG1WX/hw+HHWXPhw+HH7/JezJ7Mfwnm
BuvQNO/77P8zvDexR93h/Z19frr3dPb2O71Xsmey93Cu4XzD3sN5h3MP+wTn
IM5D7FucNzl3LvN9EvdKL/iOh7sdxmY9j8/l9iPe846b2OYEJ7axwdw1sRdy
ZuTsyBmSMyxnSmy0407suP/s8pY4HXdVyftD/H+eal4CnoK3QfjXzj923tdA
doF/9chO8g4H4bzTAebtD2Qlf3YYspC8sbHO8oWMOcZa8j4H8ZC55G0P3pNB
hvJXp0nehmGsPe9w3pNBjpIxxzhK3gshDbKYv9v9utP97TS838I7LshKbvJ/
ROQpeeuEt1WQa+RNk5zvoeB54JuQj+SeIHnvBbwpXfNOzEbLOfJeCO+1IL/I
+yC4k7d5eCcF2UbeDCEM2UfeFCEMWUjS4UZukrjUY42/jzmUvJXCt62235/p
mndimvsug//Ee7jsAxxGeS3sLjrufm4L3rY50N+DLAgyILQjcifIm9A/yKPQ
37ztQv/zViZ9QzhhtDXjhTS0KXmwvvDYAP+wefuSd3Yoh7c6Cy5/X7c7/6Gb
uN33sZt+5g0k+uxVfyvfz5tc1Jv3elL+VurN3sxexv5fafdebnfKSd6raeYy
WN8bub1Y7xvbnXY63Ixdxjjj/i+t/Q/kYo3Z/O8uG/w7d4fwwfD7vIfC3TJ3
yLyTwv9o7pmx7c99Mveu2PDnTo67ueTtFty8NcC9Hfd3C52OvHgL4EOn580C
7mu5p33K5XBn/YDTcW/4pP2SN0w+cnreyuBdAN7i4C2DN11e8iYNd4vI6fDW
R/IWCjh5UwXMWxrcbXF/xV0XcjwznGau8yDf8f6GBZU178fQFsmbN5Q3wWG0
02zXnW/jLYZ3HW+e2wk3b4aw9rHm8TbIMrtnuT24ry4Tn/5oLngjHhKYnwve
qLHoHrngU373Psoe+pv8ZuZiz/zNeyf75ib5zcsFH/Of8CO54GP+EJ6Vi726
nH+fueDJ/hS+Pxf78L/CD+eCF1kvPDsXezX/LsZ5X6PNuDtM3szgvpE7Rd4i
4a2E5C2Uxe4z3lZZ4rDb3QbJGyxLHUbfLHe70Fcv2E0frrD7LpeJmzdVuHfn
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
cMV5rBT/5Wv7H/3/AaUbA+E=
           "]], Polygon3DBox[CompressedData["
1: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
n/LmKjgouaizyrjGuvc143sWiS9z/T+N9KngDuQ7nbtl5Cnf1YwyOTy5O+u8
UQZXJGc0i/QzZfiY9S1/A5bm3rtTtgfYUd+p9p3X2iZ4sIx37Tt/qxl4EzyQ
ypQngvvLyJuE/J7Pinyf+xZt/pSHT1nf8ntpT3UvtY5769v2vYw9dinq9G+L
Pu2Qx3mV5VvDB68vfjx1Xwe3UncEWKaKvu8JdlJ/Iu9Z8C11vmuG7DP7rOY9
jPwQ+BD5I99PM9q0rdu0jZoR82Gsx81lcHZyd8bMGTs3IV1j3dvL8C85Nh2z
mzTC/y531DnFPxjPJh85f4qH0ybQNjAmb/nkRx9eBUcoVzizjPhIYyiXyEMf
lfOT63sU/FFGrKXxj0vlcX5G3XK51jhPY/y//lz9xcY6ziqjrjGTS8sXkT7P
b0dbD4FLkC8GjzdD322pom/rO8eo/3QjztB4dubFImKz3JuNSTJG6yXwYiM4
VblV91K5VjlJ91RjtaxrjJ8xW57/sa9+U88fnVxEmWeO+6e2XmgEZ2ubJ9O3
IeBWvxH4p4z4TGNEl8tDfzNewne2GOkl6f9ubTGGtk/2lbEU1lG/M57BWCNt
FuMpjF/Ul6RPyfhI40/1Fekz+tu9ifTxYDjyjY7tMrhlv6nxifbtJHBLM/r4
dxmxo/ZxWcrfzCN2SQ7N+KYx1FmmLXR2dffLyvBR6Zsa5fwtwhfvN/T8xvt5
xGEYZ2Xs1ovNGEvGFF1bRpk2praldezLiY7dZvTpHHVWcL9z1r2EOru2xTvq
l8bbr2DRPN6fbdq2OrPxlL+7B7hv5DEenePOdTlRudGvwMpyYeCntA67zv6A
PDXNaee2nI3cTSv335+6+6Xx9X0zvs8u4GfqfZzm5XfI35exptumbf2Y+rJ7
+r726TPX9jLmsPPSeb2iaxn4Nq1B96Z16q3UtnUs8x7q/r4L34k2gHVdmyam
dc5nce+YUsYzOT/s+75p/hpDYiyJMWn9iujLJ2WsUfbp9rSuuKa6trqmurbK
iXXwYFXEBk5MfN7HlH1Uxho0Lq1LrnXyXOekvqzkWtcWffq3DD5xYJoP1r2l
DE5saFpXvaf3ujCtH3uk9XXJPLgNeceri+A4XC/2TPuB64vzbWDiOx3PjpX+
afw4ZhzvlsmJLuMaVsY38Vu4VnqO13PrHTFkVewP7iXbg6/L0BHUFdRJ1A/U
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

           "]], Polygon3DBox[CompressedData["
1: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
fRs6Xyq3+vllQWty/jVAF87/Oa+p/gf6grgj
           "]]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJwl1WV4lmUYBuAH1qO3MWKMGGViYGAXBgYqioGBYosCBiaKGNiFgYEBI4aK
PZrRoBgYmHTDABVQDKzzPvhxcj3PBT++477fl7dVr77d+tRIKS3zx7aslNo7
d6U/w5hNNQ38fSd6MphxLGInZTVT6kI/hlLFWmpnpNSRHgyigoXsoDQzpc70
ZgiTWEGO39CB7gygnAWUZKdUyfyclJ7ITWkJPzkfLZ9kKT+7HyOfYhm/uB8r
n2Y5W92Pk0NYwTb3zvIZVrLd/Xj5LKv41f0E+Ryr+c39RPk8a9jhfpIcylp+
d+8iX2Adf7ifLF9kPX+6nyJfYgN/uZ8qX2YjO91Pk8Oo5m/3rvIVNvGP++ny
VTbzr/sZ8jW28J/7mfL1mA2JbgyP2VCDsxgRs6EmZ1MesyGD7oyM2ZDJOYyK
2ZDFuYyO2ZDNeYyJ2ZDD+VTEbMilB2NjNuRxAW/EbMjnQt6M2VCLi3grZkNt
LmZczIY69OTtmA11uYR3YjbU41LejdlQn168F7OhAZfxfswmL6UCeTkfxGzc
C+UVfBizcS+SizmCPdwfl/PMeAs/Oh/O7vrH5FzdZn5wPozd9I/KObpNfO98
KO31j8jZumq+cz6EdvqH5SzdRr517kRb/UNypm4D3zgfTBv9g3KGbj2LnA+i
tX6wnK5bx9fOB1Kmf0BW6dbylfMBtNLfL6fp1vClc0da6u+TU3Wr+cJ5f1ro
75VTdKtY6LwfzfWD5GTdSj533pdS/T1ykm4FnznvQzP9QDlRt5xPnTtQor9b
TtAt4xPnvWmqv0uO1y1lgfNeNNEPkJW6JXzsvCeN9XfGLnWL+Sh2SCP9HbHz
2CHzY4cU62+PZyN2yLzYIQ31t8UzFDtkbuyQIv2t8azFDpkTO6RQf0s8k7FD
ZscOKdD3j2c3dsis2GE8k/qb4xmPHTIzdhjPrv6meBdih8yIHcYzrr8x3pnY
IdNjh/Eu6G+Idyt2SFXsMN4ZfT85NnbItNhhvFv6vrIidsjU2CG19H3kmNgh
U2KH5Ouvl6Njh0yOHZKnv06Oih0yKXZIrr63HBk7ZGLskBz9tbI8dsiE2CHZ
+mvkiNgh42OHZOmvlsNjh1TGDsnUXyWPIkO/3Teinde6LW1oTRmtaEkLmlNK
M0poShMa04hiGlJEIQXx3aM+9ahLHWpTi/xd/43Ef7PJT0g+T8nPSD5jyScu
+QSm+LZuVR4Zv9M/LpZXxjPq3DB31zf3f+Hx+gI=
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0zlPVFEABtA7Q4WyuFVamWihDAMxbjEKKhDZQdwQEAmyzJiotQu4/wMt
WLQ22hmjgEbFrVaMAqWVW9RCSVQY8LxYfDn5Xm7e3d5b3Xmq6WQshPBODuaE
kMgOoZnFbOEGtnEj27mZHdzKTm5jF7ezmyXsYSl7uZO75Jhc1Lt4id28zJ5o
nNyVx/o9PuF9PuUDjkj+ohBm9SWc41Iuk2RuCHtYyEq2s49H2M8hPucgxznA
Z5xifHEIkwx8zxhjed7FwAIueJ5god7KBFtYwMNcz0Ncx2Y2sI/1PMc6nmUt
T7OGZ5jmEFMcYC8H2c8RXuMEb/Mzb/ELHzLDV8xxDq+5klNcww/R+vmRm/id
O/iNJfzFMv5kOX+zkrOs5l/WcI71nGcjY/khNDFwH7N4gHHu515ZMLaBGdax
Vqrkj17BGZbyB7fwE4uYlLUyra/iG+YxN5rfXh/pX3mHb3mdozzPmxyOzk0a
9TYmmWScWZx2hy/d+TBf8AYv8CirWcQqFnMFM+ZdznmO+fbGmeYVpniVZUxx
N9Ms53FW8ES0p+z//9M/d2Js6w==
        "]], Line3DBox[CompressedData["
1:eJwl0j1IlVEcwOEjtfi9CQ5C4sdVU9RSQ1SoBgtzSMtE7GIaOGjoGlRcWxJn
qe5SbUKlhEiIXfugqMZQlMBFaUhBh2xIEPX6XBp+PO8fXjjvOectHBjtHEkL
IbxWVXoI3VkhVHOErRzmZU7wDsc5xEcc5hcu8DMTTDIvI4Qz2SFcYS3b2c8Y
b/Ehn/Mb13gyM4QTOdZlNaPsYIzP9EJj5gSfcIXT3GFSadb8bs7lMgu4xlL+
Yg0b1Kg/5vOpvemf50vc40Xu8gL/spnbbOIO6/iblVznaW6wiD+Zzx/M5Fce
+K533OIUN/mSS5zkPB8wzkHeZRs7eIpXWcROFvMaS3idpexihDdYxjLuO8sI
D1jOQ1bwiEfOepmHXGGSq/zIx/zAp/zEOO+zl/d4k62sZA6z9dZdz+m9/c5y
kW+Y4AwX+IrznOKA+jVm7mOMUbaoSbdT95N6h+fYx3pGeZa9rGVP1v//9BhS
EF42
        "]], Line3DBox[CompressedData["
1:eJwl0kFI01EcwPGn5MFthheZBxsqJqIXa5foXFRSCgaCCUOWJ6lJBAOTguoS
3YqYR4MdPIghgjBsu03wYFoIuwy86A55EJGI5Tr0CQ9fPv/fgz+P9/+/nvTc
eKYphLCoO60hPImFcI/v+ZTvmOEWiyyzxKa2EDoiXmKcSY7xMd8wzbdc4jar
bImGcOlyCMMcZorjfM1ZfuamSlo0V7jKk/9rbLb3NtvZpYSq5gEe8hpv6Kfn
mzxmkke8zhoHecBeVtjJHca5ywjLbNizwBrzPOIyv/MDN7jAHGeY5V2O8grv
s4cJnjp7F8/YzV/s5W/2sc6r/MN+Nnjum31jnXts8Af/cp9FfuRXfmKJOb7g
I97mIG9xiDFGde58rVzzD79o07zCApe5wTzXucRppfTKPMWXnOQCJzjPh8xy
jM/5gM84wrnYxb36B/GxVSM=
        "]], Line3DBox[CompressedData["
1:eJwl0s8rpVEcwOFDfnSvy0LUpNA1C1kq+QeshHGb1CA1JVZTGClDFiRZyDRR
KJs7srAYUkIsbo3y4xIpajZsbSUj7s4ji0/P+92c9z3nPfHu/s99WSGEaTVF
QhiIhdDMWfZzht+ZZopH/MucwhA+REPIZhnr2cI6JtjDKf7mMZNM84Z5BSHk
FoVQy1p+5bgm9c28wgmmuMR/3OA9g/fnKG0u5hUrWa0bzzW8ZZzXLOUpS3jO
CA+YsdY2X7jHO67ygj95zjnucIyL7OUwG9nKCraw6u0b+GBv5XxknE/8yGf+
t/dDPvCETzzjMy+Y4SX3OMtd/uI+5znCdv5gBxtYwyjzlXk7F/7xb9a0Y17l
FpPc5DLXucAudWrM/IWjbOMwExziJw7G3u/FK1rWTV8=
        "]], Line3DBox[CompressedData["
1:eJwl0TkoBlAAwPEnfW5KSukbsMhMMjMoBoXEKGUTcuTaJAm5UlIGRxSDckbJ
90WRo0zKYqAMlJRBMvmV4d+v9+r1rsLWzvqOhBDCsOpSQ+jLCKGeixziPHs4
zS5OsZs3jPGK54xkhpCXFkIioyxnLctYxzaOcY13fGJyeghJWSGUsoQtbOAo
27nOEca4xEd+6EtnxhF7ZytHBXowl8tbpjDOZF7w15ojvnCFz9zgPWe4z0Eu
sJW9rGINo6xmPqP8dPY3dzjhK0/5zjg/eMFPXvKL1/zmHQ84zj1O8pDTPOYc
+9nEShaxgsVMYUQ/7pPALW++oQPjVe5ymTtc5DZnuckJNqtRAxn///wHnjZH
Yg==
        "]], Line3DBox[CompressedData["
1:eJwl0b8rBGAYB/AXdX4df4CklPIHMCgDm8Em7CgmbvGjWJS7JOpIysBwKIPh
8iNXSu5yRXfJZDEYkEVd6kIZ5FOGb5/3eZb3ed+ndTQ2MFURQojJdG0IyWgI
c7xnnkVmectrRhpCaKkLoZsD7OIQJxjnOJe5zzs+saY+hOrGEDrZwREOMsFJ
HnCJWT7Io6TVZVa598o5why/9U74xQxfmGKRqyxwnWec5xbHOMM+9rOZTSyZ
7dWMGT7zgm+85DtzLDHPD96wzAKPmWCaKzzlGs+Z5CyH2cs29rCdEVbKt/f8
+s9P/nBPdiWt3uYRN3jIVaYY5w4Xuc0Fbkb/9/YHN5pGzw==
        "]], Line3DBox[CompressedData["
1:eJwl0b8rBGAYwPFHBo5jZFGi/AcMCoPyD7jOqixMJ+VESVFukAFZqDPICVF+
LIoMV0q6ZJe7waBkUH4sBj4yfPu8T73D0/u2jYwPZqoiYlTZRMRKMmKa97xm
iTdMNES01EXUsJU9TLGbQxzjEnd5yx3escJEfURtY0QXOznCNHPMsMBLFbVp
fuCbjp0/eMYK8yxzmyUu84RTXOUwJ9jPATaziS92KNvllI885xMv+MwrvrLI
fc6wwDkecIFHzPGYS8wyxUmm2cd29rKD1fzxbl/e75vv/OSWNnRoXuMel7nN
ReY5/3eHs1xP/v/LLxQRQCU=
        "]], Line3DBox[CompressedData["
1:eJwl0b0rBGAcwPGfzZ1jZVEnfwODl0mZpYtVZLBQRydKCrlBNyCUq0PeU8rL
blBekmRXblQWV5gMPjJ8+zy/nuXX8zQNjvWOVkXEsHKJiOVUxBSfecNH3jNZ
G9GYjKhmmp3MsI39HOESD/nAfT6xzGRNRKIuopUtHGIf89zRkRbM1yzyhRWd
OX/xkmWWeMc8b1ngOSe5wgFm2cVuNrCe73Z4tcsFN5jlOidY5JbedGXeY47b
nOYBZ3nCeZ4yz3H2MMsMO5hmO5sZ/PFun97vmxV+cFOrOjYXuMtFljj3d88Z
rqX+/+MX8V088A==
        "]], Line3DBox[CompressedData["
1:eJwl0L8rxHEYwPHH6L7nZgbD5T8wcBYMymRgokh3mSTfuEQp5EdOyUJSTpdS
KEz+BCWUgVIGxSopFpPyKsO71+eZnk9PvpQOTNZFxIgW6iN2sxGLfOIdH3jN
e94yaYhoyUR0cZCdHOIEKxznJk/4yDcmiXIRrcywnW0c47I2lJpPucYrPqvq
/cIab1jhBad5zjlus8gye9jLJjbyw+5Xf7jkHsscZTeHWVJVM+YDzvKQ8zzm
Es+4yin2MWU/O9jMAvP8dZsffbvTFz/5zh1t6ci8zhpXuJ/9v/cfhB42XA==

        "]], 
       Line3DBox[{2440, 3232, 2441, 3298, 2521, 3292, 2514, 3287, 2508, 3283, 
        2511, 3342, 2593, 3340, 2596, 2650, 3393, 2653, 3395, 2656, 2661, 
        2718, 3448, 2722, 3452, 2728, 3457, 2670, 3402, 2668, 3406, 2672, 
        3410, 2618, 3358, 2552, 2546, 3311, 2539, 2453, 2447, 3237, 2440}], 
       Line3DBox[{2509, 3284, 2512, 3343, 2594, 3341, 2597, 2651, 3394, 2654, 
        3396, 2657, 3397, 2659, 2664, 2723, 3453, 2667, 3399, 2665, 3403, 
        2669, 3407, 2615, 3355, 2614, 3359, 2553, 2547, 3312, 2540, 3308, 
        2533, 3304, 2528, 3299, 2522, 3293, 2515, 3288, 2509}], 
       Line3DBox[{2510, 3285, 2513, 2598, 3344, 2599, 2605, 2660, 3398, 2662, 
        3400, 2666, 3404, 2613, 3352, 2612, 3356, 2548, 2541, 3309, 2534, 
        3305, 2529, 3300, 2523, 3294, 2516, 3289, 2510}], 
       Line3DBox[{2517, 3290, 2519, 2600, 3345, 2602, 2608, 2663, 3401, 2611, 
        3349, 2609, 3353, 2542, 2535, 3306, 2530, 3301, 2524, 3295, 2517}], 
       Line3DBox[{2518, 3291, 2520, 2601, 3346, 2603, 3347, 2606, 3350, 2610, 
        3354, 2543, 2536, 3307, 2531, 3302, 2525, 3296, 2518}], 
       Line3DBox[{2526, 3297, 2527, 2604, 3348, 2607, 3351, 2537, 2532, 3303, 
        2526}], Line3DBox[{2697, 3435, 2701, 3497, 2772, 3554, 2828, 3596, 
        2873, 3639, 2918, 3671, 2954, 3696, 2986, 3009, 3718, 3013, 3721, 
        2991, 3699, 2958, 3675, 2925, 3644, 2924, 3653, 2888, 3610, 2841, 
        3565, 2785, 3509, 2713, 2707, 3440, 2702, 3437, 2697}], 
       Line3DBox[{2703, 3438, 2705, 3501, 2768, 3498, 2773, 3555, 2829, 3597, 
        2874, 3640, 2919, 3672, 2955, 2982, 2988, 3014, 3722, 2992, 3700, 
        2959, 3676, 2926, 3645, 2880, 3603, 2834, 3559, 2778, 3504, 2777, 
        3510, 2714, 2708, 3441, 2703}], 
       Line3DBox[{2704, 3439, 2706, 3502, 2769, 3499, 2774, 3556, 2830, 3598, 
        2875, 3641, 2920, 3673, 2956, 2983, 3697, 2987, 3701, 2960, 3677, 
        2927, 3646, 2881, 3604, 2835, 3560, 2779, 3505, 2709, 2704}], 
       Line3DBox[{2770, 3500, 2775, 3557, 2831, 3599, 2876, 3642, 2921, 2952, 
        3674, 2957, 3678, 2928, 3647, 2882, 3605, 2836, 3561, 2780, 2776, 
        3503, 2770}], 
       Line3DBox[{3558, 2832, 2837, 3606, 2883, 3648, 2922, 3643, 2917, 2877, 
        3600, 2872, 3601, 2833, 3558}], 
       Line3DBox[{2878, 3602, 2879, 2923, 3649, 2884, 2878}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
hcVtVfp713Ihp8VMr9tYhrXrzLXzzCho6SRvDy5kgot9drCxsRnzp3ssfQ1o
x2+bEvJ7eQpULn4Oki/tgMk24YLngSO4M1XZuShbgI2Jll6Fpf1Q+2wZWSQw
gEjL2aNsb1sQZMD1ecR5EIl0x6Of23TBy+NU963YOkwuXbw1/2YMYbc8zYuU
8nClL+C6m0I5RotG/bMmqBjqDzIPWJkKb5d004WABExo7x7ZVEXCX0hUhHur
J4yN6dQtnBwgE666hZ2mjztHN7yWe/oUhrcZnOi8THDAyU61gLZuK3U5Mzgy
5NFUq7kxyeISdn/3XfqjXw/IUzvqPej+8q84PPH/wcf/ke/+P+LleaetTC6E
Z9X/M/7bt7qcqT+9ejwpyyh3vYv1ndS/+OVbtmI7RXKzShY3bnz6uPkvnjvr
UP/ErCZLYD/XV8VV/z4/P8LsNnDm2lCWhOrmfdza1X/x/5RPt37ZoO9Aaftv
Pf37fb8TUXWySznEbMya/pl3xmC/0+cm84XEQK/hr/XLmgmB3R3tpFgoXq1U
itnTSEGZ7KPjAtNtxG+WRwWV2xNxIUFGYIw6gRNZDhk32ceIsYDOOr3iVFyM
5dUbv96HYqHStwtuNB97Zvq2/4k8DMxp/Zo/n4QiptMu5FWSeFRy/OR0Zgm+
/ahdCFSKw49ngwPue0kiXJukXlhVCY4MFfvUEwGoOl1hJMtLJUZK1c+kKjWC
7Y4Mx61MZ0QZFaqLUvsIzXsfdQaLR1Et89JIIiUAlPAS0eb4Nrj+zn+jxkGB
8MnbjDG6gVjTpVjxTHQcQY5mN+QrejAyY/pO95s37NjfHJ2eH0VSfUGnfWgf
nvgL8Ic8DILWlBtf3eQIDrnMJF2b60fDLt9C+ZZwqCaf3dl9cwRrD+wryfw8
AHj7ue98HInLh+xGor6MQOrZp5EVkgO4oXGj5+72KFh8t+dzUaXxXWOF9pJx
D55Oujia7o/HPpPUQ+O0XLx41G+P8o5uRGcMqi+2puNeemvb3Z1j2Dv5I1dq
ey84UyUecqSXQ+7W3lYHmk+Vl0v0XN/TB9/74omhnI1gDmC8Fbx8CBreaRev
ruhH61gpE3tsG5IkbBu+7x6A3EOSbn9/D766yH5qOtWH4dBGXWFaPv+grdzA
9rwVvwrz3/C/GkFdm3gmZ3sNBAfYZw6PlIIvzD697wgVB5j2J0l7RUOMSy5s
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
ptflg8tEM6DpZbtdrjMBnC/dlxY2wdDW1wNWwXNFoHqt+mwp+ghbRdiKUsaJ
yH/wxyJbWDNUNG8r3d4bAK/fK8+MfhpG2yQe0g1aDkOR+l33S2s+wrSo1lp9
23Yo2Tiqq0aahC20GVqViZnAdC748ZovGFSx7YmT1fdCN9bxtNKkx4J83Cv2
4VEMfppa+Bm0+SPtig9xr6oTYbY3ZVrSDgNmEVX/R3aFaPtRM94J03jQfnoi
iVkPg8vO6e1F7MXom/f7DkaLBNiZQIedOkoEuaZHx1p/tqKyLyrqY4G5YC+V
Oruflgh7UxSsEv3q0VPO5/kfnjRAOa/10ZfiJNgg2XPnxKZiRJt+7HS1Ux24
H2FO0K4ehgHn56Y3e0oQzZVWPd+wIcgKfK5Kp9AMrgTCg8nPJeitzq7X7KpE
8NEXrzqQ1AQSjRk5iVVknay4YdBpRQS/92leNZkJsEoj6E3iUWdEFdYw+YFI
9sNrv1e9UX4Mj8P5pU989UQ8vNYHmch9ylyavub1BoRcrl3heNPhjVK2iJnf
yMMgwbHSilM8B7HsYT7B7lyLdKbOobJPJKA94N7K21uKOD4HimSENSCbBasP
prVEMFxynR/TCwUOb5ad64VbkNtRO6f35URIljP9/twoF/RXncEUaAuRzzmz
N3Rkf+N8UdI6faYK8n8e486IKEC/fp7N/5hOXkeND9/t1IwBY+OoH4PNDqj2
xsU5xa8Y3PZVTj0/bwX+hotXpyxN0P5KNamX5L6+GL9bay2jOfg9u+PWm/ME
8Vw88Tnn9/tkfKUTDpLOwr4J96i4+SkC6eXpzt/rgMmqQqr7vt2EMytyp29g
Oiv2rJWw7/C/uVM5rteWK3In0V0sXmeflxJ+rcidLEX0m7fJ1AmlrnjuRgnn
s2wr+CyFt9Zm+P2P51hX/nNVQti5Jktugt2KPOq/f/9oR0OSfoYJyv7xJaz5
9/s6ZJwtAkeOgRitvsFtu04U9EA88WbEJBjdODOXwc0HDh01Z9yTJhDVLjmG
gnW9SPnje/eWo5/A4RP/WbnDmsCrz80Y/vu5advae6n+tSC67kYR19MY2Dt4
bDfWQYK3O8/eyXuVDHscX9waOjmMLAQnBM9ODENlFjVzmzsGPFmv40k5BTCh
1+m40yQGfAsHRDUW+mHb0IPVp9EY0DAFFHRz+8NMz8d33HwjICrNrh5w4BV6
/s2cK4R6GJ3Vm5ywYi6Hd02qikBejz5R353klfEA16mIfexkn3vGc0f5Lhby
/+/T2D5CuSfQR1L4oAHOB0txPpggpTyxyqgLRsqDJT4cmwThcmzCSTQbrtHR
0t86WQi3hMr7nchzbtdCa5f8k1Qggnz3re529AZlatz9lIbmOr0knw1OgkhT
1qqvt4konf1yuXh1HTKkqrv67mI9NINqn9TZcaQeUlo5/7YYnfGVNGQ37IOh
zqtNRfs7UPb7+p4XemNgY0d8ej6rAxkbvDj3TjAUiais4qtfaIZJ84SYry1E
kIgfcBTjDQV/phchgup+YCaqeLyfrI/hKRlPHLqc4TS469cw6qOdL3qbaH7v
D3808It63QTQvO3ZcYCtD7Wl3Z7mWO2ICgwGN8YrNMK4zaXhG9dJoNu4997E
nhBgLJqcwwhhsMUieDSifBiu8GWZ+z4fhtUKVL+OhxjCE2P9bJurDnBxN9Pc
b841Vy6dEEuuZ7afiKLrNUWLO0Rbk36/B3gD/VmhREaY1339oZ/sF48wsBy4
S/4k4nwqlJnCp6JxPnW7jX1Vx546GGVqfJ3RRFq+X+szJPpPaXbC3r2FUzdi
J5d1UBnX30e1/+ovfTaXjO/ZTuRA7LtWnT65fJ4YPKfK/qO/H5f7awjPqWpx
X1uGf2b9cO75bjnFvyNNPLSM928uXfA2Q3uNQBE07Dzn6O7yN6dSw3Mq6oRL
Xe2a2DLH8cX5jtwfvzy9PBd/wPlOQ3OOz3xcI4ED5zvcON8JNqfwHWqc77jh
fIduA4XvTON8ZxLnO/euUfgOG853tHC+cwTnO1or+M5uUQrfEV7Bd4ZwvmOH
850MnO/E4HxnA853duJ8JxbnO5w433mO8x1RnO8Er+A7T3G+cxuff/fhfCeX
nsJ3gnG+k4HznRs43xHA+Q4vzneCcL7TgPMdeZzvfMf5ThbOd77hfKca5zt3
cb6jg/MduWEK3zHE+Y4gzndWhVL4DjPOd9zx+bdxxX5FTZzv7BOm8B0tnO8U
n6fwnScr+I4YzndMV/AdNZzvPDpL4TsRON/Z7UbhOyy6FL7zAuc79jjfKcP5
jhLOd5pwvrP+NoXviOB8R+e/+RfnO+swyvwrgPOdUZzvGOF8J/4rhe8son/5
zlmc77Cf+ZfvnMD5znjbv3xnEec7eiv4zk2c7yiu0FlJnOPIr9DZJSNK3Wql
zupS+A5L5L86a4fzHdcVOtvd92Ubm9s8v+EKPaV2btDZN12d4cP+/3uexVbk
xmuTznRVpeoKbVoxz/a6UnLjRjw3lsRzY7YPiIH7/BnI5JivuPF9HIXW87x1
EOgDau4xJeYSc3BgfRu2eRJD/op23pw5iSAen3NsjsoTCl3WiH7vwlBr5l5G
0dTU/7MvyBLfF+ROLyBKEmuAh7tV3ZVMSWhJLqGfeksUqKlfrOFwJN8v4l/o
jTvqoaVGZ79A3Ad4mfk6b34Gg4xIZPdTwxY5bjn95MypWEg7jPWEOLVB3MvL
UwGyRJierTlxvCgIPjxQvnlltBNub8/R67Uh+4Pbkc7D3BGgjevpJlxPMVxP
jT0GNq9ZPw7rJA8mOZb3gSDbh9xj7UUQvPHYe7OuBtig5iIfME6EWjsxh9Mb
ikFD69eZlIPtCBqS+YnZY2A18LlG27cDXnaLcmnd6EXpQTZOdXTkdUUg68DL
m4Xg31yX/cOsHunRfBjHVpOgh33prVdQKdwQsrmtYtWC5Nor+hQ2DYOii61d
z8IAnIi23LOBKhEZ7Rw8Iqs1BP7apen8MSOw47B5YeSJJJBTmhCTUI39/X61
BqceDAb7jStCOwOgM7y3hZfRBgXTOj7et4iBHI+i3HC1F+h/kRUdn3BCkjou
juw/Mag5ItwGL2LhZ0CjqblcKAD2RIJEwkD2VPaPkr0fIXhhYDS9wRlSe/Zn
F5L9Ui/+XghFw3/fC+GdknXoNrn+cVxJWfGlKpzKUXzye5/wXXyeVVqxP4Td
mKKnHtv/3e9xG8+Nt654L4SVC6Ve+GeenV/uC09cT11W7N8wbaC8L0Jl/vd+
jK/L55nD51mGFfNsrjHlfRFOf+bZxuX67/0VVNtYBTj/6OnfnMqhlfK+iPw/
8+zf/RX/5cmyUr35pjJUmf/Vr+N6qtQtNnOutXNZZ+/jeiov0MUQ1pFLOIrr
6Vdtip6CGUVPN+J6ehXX0258v8T8iv0SxRIUPdXB9fQ5rqe3cT11wfX0I66n
i/h+icAVelqA62kDrqfpK/T0Eq6n7LiefsD11BfXU21cT4VwPd306F89lZyi
6OlHXE/34nr6egtFTydxPc3E9fQIrqdduJ4CrqduZhQ95ThN0VNVXE/bcT3l
vkXR03lcTwctKXpaj+upGq6nP/D9Ejm4ng6qUfQ0Bd8vwY3rKT+upz9wPZXB
9ZQT19N0fL+EOa6nXrie0v4PPeVboadRuJ66clH0NAzX0124nkriemqI62kJ
rqcvcD19iutpF66nk/h+iYu4nkbgesqK58mLeJ4sjOupA66npriejuN6qrpi
v8RJXE+frtBTTVxPe1fsl6j4H3rqjOup8Ao9lcX1tH7FfonDeF11hZ6uwvV0
ccXcmovrKeOK/RKr/sfP/8qN//v3+1fkxsopcxdVxmMJLnhu7NhDmV//O957
hc6y1VFyY0s8N36L58ar8dx4HZ4brxWn5MYqeG5cgOfGMnhurIDnxhl4bhyH
58ZvcZ1dh+tsEq6zfXhufAzPjQ9tpeTGAXhufB3PjbXw3PgNnhtX4bmxTgwl
Ny7Ec+N3eG4sjefGXnhuvBPPjYnUlNx47UFKbrwDz4198dy4GM+Nk/HcmAfP
jRlnKbkxHZ4bt52h5MbfHlJyYz48N36J58aCeG5M/ZCSGzcoU3JjeTw3NsJz
47keSm48q0nJjXfjuXECnht/xnPj+3hubI7nxuZ4biw6S8mNffHc+AmeGx8O
oOTGekOU3Pg0nhtrHPs3Ny7Hc+NiPDd246TkxgJ4bly2Ijem46Lkxmvw3Jhq
hJIb07yl5MZT3P/mxmdwnS31+/e5VwE8Ny7T+jc3rsVz40srcuMkPDceXpEb
/6+51RTPjZ1X5MYxuM5mr9DZaTw3rmv9NzfWVjG5c0p6+b0Vy/1zBc+NJ+T/
zY1P4Dxo48r3qt2MPusUUYWGdv8iVO7H0Ju57aZnpm1gVN4hc1V2A4o58o3u
rTYJXbKS81iy1Afiycbdc/rtSHxMrnrPASJaVXuhq87WCNjktwtWXmpGNL2d
s1K/iChIZFYryFQbfO80IuXLwWj7E0F25QUMhZwFe9GvtiBwkNn+ntYHFCN9
7IDEdwxxSspquAcZwb0nr2lu+D6Dd1bsOcbk9aF6n4rbu/t2oD7L/s7b3gYN
n1c5qEeu9zrq+1A3GoHiZ5ZteckBIMXCUEe/iCH+jOtbZHzt4MhNl3UM995D
w3B3ys2fZH3mPH4/h9EEuh+HCtOwJoD6eoUTxzEM1XFt4oyKtQcp2zkrzTvJ
wNXgFf54FEPDpw0a91GbwoG759SjC9LgUvxiJl0nhm4ZdmIDt1/Dbour/a3X
EKwzftVwPx9D+hwBx2snDUGK7fSsmH0mXNlK+/16A4aUBS8LPhJ4DQlFqKO3
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
wKE/WEssXw==
     "]], {}, {{}, {}}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{370.36373002568433`, 293.8047887380047},
  ImageSizeRaw->Automatic,
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-0.1, 0.5}, {-0.1, 0.5}, {0, 41.180132720721005`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.6240718320195255`, -1.0238004645037473`, 1.8751212305564637`},
  ViewVertical->{-0.5162480311605487, 0.2014178757044712, 
   0.8324174491621108}]], "Output",
 CellChangeTimes->{3.801719136233183*^9, 3.8030131154085875`*^9, 
  3.803368556574929*^9, 3.8038906683449636`*^9, 3.803936857830065*^9, 
  3.804291956960224*^9, 3.804311845323472*^9, 3.8043119311085777`*^9, 
  3.8043120917136464`*^9, 3.806116643338101*^9, 3.80679244155721*^9, 
  3.8068217274139175`*^9, 3.806883012698744*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"96b5acbd-99f2-46c7-b9c9-c3303f25b35f"]
}, {2}]],

Cell[TextData[{
 "When new data are obtained from field measurement, the ",
 StyleBox["NIW",
  FontSlant->"Italic"],
 " distribution parameters: \[Micro]0, k0, \[Lambda]0, and v0 should be \
upgraded as,\n",
 Cell[BoxData[
  FormBox[
   TagBox[
    RowBox[{
     RowBox[{
      SubscriptBox["\[Mu]", "0"], "*"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{
        SubscriptBox["\[Kappa]", "0"], 
        SubscriptBox["\[Mu]", "0"]}], "+", 
       RowBox[{"n", 
        OverscriptBox["x", "\.af",
         DiacriticalPositioning->True]}]}], 
      RowBox[{
       SubscriptBox["\[Kappa]", "0"], "+", "n"}]]}],
    "MathMLPresentationTag",
    AutoDelete->True], TraditionalForm]],ExpressionUUID->
  "015d067a-1bce-416c-a18a-ab73648e3796"],
 "\n",
 Cell[BoxData[
  FormBox[
   TagBox[
    RowBox[{
     RowBox[{
      SubscriptBox["k", "0"], "*"}], "=", 
     RowBox[{
      SubscriptBox["k", "0"], "+", "n"}]}],
    "MathMLPresentationTag",
    AutoDelete->True], TraditionalForm]],ExpressionUUID->
  "b91bb082-d0b4-469b-8418-10bed02ddb4d"],
 "\n",
 Cell[BoxData[
  FormBox[
   TagBox[
    RowBox[{
     RowBox[{
      SubscriptBox["v", "0"], "*"}], "=", 
     RowBox[{
      SubscriptBox["v", "0"], "+", "n"}]}],
    "MathMLPresentationTag",
    AutoDelete->True], TraditionalForm]],ExpressionUUID->
  "3f08fead-c579-4cd1-a81a-e7e4bf7790a7"],
 "\n",
 Cell[BoxData[
  FormBox[
   TagBox[
    RowBox[{
     RowBox[{
      SubscriptBox["\[Lambda]", "0"], Cell[
      "*", "Text",ExpressionUUID->"9c2a5301-dcde-4a9e-966b-371f26780dde"]}], 
     "=", 
     RowBox[{
      SubscriptBox["\[Lambda]", "0"], "+", 
      StyleBox[
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "n"], 
         RowBox[{
          RowBox[{
           StyleBox["(",
            SpanMinSize->1.,
            SpanMaxSize->1.], 
           RowBox[{
            SubscriptBox["x", "i"], "\[Minus]", "\[Mu]"}], 
           StyleBox[")",
            SpanMinSize->1.,
            SpanMaxSize->1.]}], 
          SuperscriptBox[
           RowBox[{
            StyleBox["(",
             SpanMinSize->1.,
             SpanMaxSize->1.], 
            RowBox[{
             SubscriptBox["x", "i"], "\[Minus]", "\[Mu]"}], 
            StyleBox[")",
             SpanMinSize->1.,
             SpanMaxSize->1.]}], "T"]}]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{
           SubscriptBox["k", "0"], "n"}], 
          RowBox[{
           SubscriptBox["k", "0"], "+", "n"}]], 
         RowBox[{
          StyleBox["(",
           SpanMinSize->1.,
           SpanMaxSize->1.], 
          RowBox[{
           OverscriptBox["x", "\.af",
            DiacriticalPositioning->True], "\[Minus]", 
           SubscriptBox["\[Mu]", "0"]}], 
          StyleBox[")",
           SpanMinSize->1.,
           SpanMaxSize->1.]}], 
         SuperscriptBox[
          RowBox[{
           StyleBox["(",
            SpanMinSize->1.,
            SpanMaxSize->1.], 
           RowBox[{
            OverscriptBox["x", "\.af",
             DiacriticalPositioning->True], "\[Minus]", 
            SubscriptBox["\[Mu]", "0"]}], 
           StyleBox[")",
            SpanMinSize->1.,
            SpanMaxSize->1.]}], "T"]}]}],
       GridBoxOptions->{AllowScriptLevelChange->False}]}]}],
    "MathMLPresentationTag",
    AutoDelete->True], TraditionalForm]],ExpressionUUID->
  "e65eb16c-9d65-4d58-8591-b2a807191996"],
 " \nwhere xi denotes the new measurements;  denotes the statistical mean of \
the new measurements; n denotes the number of the new measurements; \
\[Micro]0*, v0*, k0* and \[Lambda]0* are the upgraded parameters of NIW \
distribution. \n",
 StyleBox["Machine Learning A Probabilistic Perspective P.134",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.8029907071986685`*^9, 3.8029907550109777`*^9}, {
   3.8042859343535404`*^9, 3.8042859518906145`*^9}, {3.804310316135178*^9, 
   3.8043103235275497`*^9}, {3.80544812916579*^9, 3.8054481378954167`*^9}, 
   3.815786037469695*^9},ExpressionUUID->"98ff0a74-3719-45af-a9f6-\
471c9410c56f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"sampleing", " ", "from", " ", "original", " ", "data"}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{"SeedRandom", "[", "2", "]"}], 
   RowBox[{"(*", 
    RowBox[{"SeedRandom", "[", "2", "]"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"samplestart", " ", "=", " ", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "*", 
              RowBox[{
               RowBox[{"Length", "[", "Ia", "]"}], "/", "10"}]}]}], ",", 
            RowBox[{"i", "*", 
             RowBox[{
              RowBox[{"Length", "[", "Ia", "]"}], "/", "10"}]}]}], "}"}], ",",
           "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], "//", 
      "Flatten"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"samples", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"threephasedata", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"samplestart", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"samplestart", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", "9"}]}], "]"}], ",", 
          "All"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"get", " ", "the", " ", "coveriance"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"covs", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"Covariance", ",", " ", "samples"}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "fit", " ", "InverseWishartMatrixDistribution", " ", "and", " ", "normal",
      " ", "distribution"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"edist\[ScriptCapitalW]", " ", "=", " ", 
     RowBox[{"EstimatedDistribution", "[", 
      RowBox[{
       RowBox[{"covs", "[", 
        RowBox[{"[", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"InverseWishartMatrixDistribution", "[", 
        RowBox[{"n", ",", " ", 
         RowBox[{"Array", "[", 
          RowBox[{"a", ",", " ", 
           RowBox[{"{", 
            RowBox[{"3", ",", " ", "3"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"edist\[ScriptCapitalN]", " ", "=", " ", 
     RowBox[{"EstimatedDistribution", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"samples", ",", "1"}], "]"}], ",", 
       RowBox[{"MultinormalDistribution", "[", 
        RowBox[{
         RowBox[{"Array", "[", 
          RowBox[{"n", ",", "3"}], "]"}], ",", " ", 
         RowBox[{"Array", "[", 
          RowBox[{"a", ",", " ", 
           RowBox[{"{", 
            RowBox[{"3", ",", " ", "3"}], "}"}]}], "]"}]}], "]"}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"GET", " ", "the", " ", "initial", " ", "parameter"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Lambda]", "0"], " ", "=", " ", 
     RowBox[{
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Diagonal", "[", 
        RowBox[{"Covariance", "[", 
         RowBox[{"samples", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "All"}], "]"}], "]"}], "]"}], "]"}], "]"}], "/", 
      RowBox[{"Length", "[", 
       RowBox[{"samples", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "All"}], "]"}], "]"}], "]"}]}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     SubscriptBox["v", "0"], " ", "=", " ", "5"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"D", "+", "2"}], "*)"}], "\n", 
    RowBox[{
     SubscriptBox["\[Mu]", "0"], " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"samples", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "All"}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     SubscriptBox["k", "0"], " ", "=", " ", "0.01"}], ";"}], " ", "\n", "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(0\)]\) = \>\"", ",", 
     RowBox[{
      SubscriptBox["\[Mu]", "0"], "//", "MatrixForm"}]}], "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\!\(\*SubscriptBox[\(k\), \(0\)]\) = \>\"", ",", 
     RowBox[{
      SubscriptBox["k", "0"], "//", "MatrixForm"}]}], "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(0\)]\) = \>\"", ",", 
     RowBox[{
      SubscriptBox["\[Lambda]", "0"], "//", "MatrixForm"}]}], "]"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<\!\(\*SubscriptBox[\(v\), \(0\)]\) = \>\"", ",", 
     RowBox[{
      SubscriptBox["v", "0"], "//", "MatrixForm"}]}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.80299290788772*^9, 3.8029929446652875`*^9}, 
   3.803012402779765*^9, {3.803012562160263*^9, 3.8030125730694647`*^9}, {
   3.8030126329249196`*^9, 3.803012644391343*^9}, 3.8030126751729746`*^9, {
   3.803012821980568*^9, 3.803012856858612*^9}, {3.803012916743926*^9, 
   3.8030130283328805`*^9}, {3.8030130780214024`*^9, 3.803013078141332*^9}, {
   3.8030131200869455`*^9, 3.803013246686185*^9}, 3.803013556662283*^9, {
   3.803013790469717*^9, 3.8030138429096603`*^9}, {3.803013906053998*^9, 
   3.8030141652944546`*^9}, {3.8030145768715096`*^9, 
   3.8030146034964705`*^9}, {3.803018431151012*^9, 3.8030184422918925`*^9}, {
   3.803022500560422*^9, 3.803022511078249*^9}, {3.8033677037055297`*^9, 
   3.8033677387002897`*^9}, {3.803367781736929*^9, 3.8033678964392323`*^9}, {
   3.8033679372577705`*^9, 3.803368023602643*^9}, {3.803368132666794*^9, 
   3.803368135252163*^9}, {3.8033681855867963`*^9, 3.803368456169222*^9}, 
   3.803368516932585*^9, {3.8033686536112823`*^9, 3.8033687090196333`*^9}, 
   3.803419486045238*^9, {3.803419517864373*^9, 3.8034195793200073`*^9}, {
   3.8034201297544165`*^9, 3.8034202023760166`*^9}, 3.8038903552474403`*^9, 
   3.803890692777502*^9, {3.803890797154171*^9, 3.803890834542636*^9}, 
   3.8038908826993237`*^9, {3.8038910772764163`*^9, 3.8038910981424646`*^9}, {
   3.803891386593136*^9, 3.8038914126896343`*^9}, {3.8038914766086893`*^9, 
   3.803891512593116*^9}, {3.803891589424142*^9, 3.803891872831584*^9}, {
   3.8038919470726285`*^9, 3.8038919645296535`*^9}, {3.8038920383697815`*^9, 
   3.8038920694969893`*^9}, {3.80389212900622*^9, 3.8038921336635585`*^9}, {
   3.8038925592944736`*^9, 3.8038925595843067`*^9}, {3.8038929653298554`*^9, 
   3.8038929879119487`*^9}, {3.803893019920226*^9, 3.8038930366414347`*^9}, {
   3.803893086979231*^9, 3.8038930911348553`*^9}, {3.803893126817435*^9, 
   3.803893134015348*^9}, 3.803893173729591*^9, {3.8038932318814273`*^9, 
   3.8038932590078883`*^9}, {3.803893769340083*^9, 3.8038938116412334`*^9}, {
   3.803893842961356*^9, 3.803893895088562*^9}, {3.803894098274619*^9, 
   3.803894191495907*^9}, {3.803894508084401*^9, 3.8038945195214243`*^9}, {
   3.8038946390567904`*^9, 3.8038947167379475`*^9}, {3.804221832379531*^9, 
   3.804221945907409*^9}, {3.804221976029194*^9, 3.8042219862103424`*^9}, 
   3.8042223254433947`*^9, {3.804222375317483*^9, 3.8042224161948977`*^9}, {
   3.8042225985801477`*^9, 3.8042226089943247`*^9}, {3.8042227619913454`*^9, 
   3.8042227626189804`*^9}, {3.8042230124598436`*^9, 
   3.8042230156750107`*^9}, {3.804223066347639*^9, 3.8042231046330404`*^9}, 
   3.8042241723247986`*^9, {3.8042257810109463`*^9, 3.8042259654792123`*^9}, {
   3.8042347009732924`*^9, 3.804234725300231*^9}, {3.804234833022029*^9, 
   3.8042348642421365`*^9}, {3.8042350719898953`*^9, 3.8042351244019365`*^9}, 
   3.8042366533792458`*^9, {3.8042370589791317`*^9, 3.8042370715391264`*^9}, 
   3.804327165448827*^9, {3.804327201744035*^9, 3.804327214502748*^9}, 
   3.804327317215514*^9, {3.806815763912944*^9, 3.806815767938549*^9}, {
   3.8068216582094975`*^9, 3.8068216860956016`*^9}, {3.806821809755086*^9, 
   3.8068218098810143`*^9}, {3.8068279347590227`*^9, 
   3.8068279348700476`*^9}, {3.806828030725154*^9, 3.8068280407719374`*^9}, {
   3.8068280861334906`*^9, 3.8068281496221156`*^9}, {3.806828195085557*^9, 
   3.806828196404746*^9}, 3.8068282517666416`*^9, {3.8068283017721415`*^9, 
   3.8068283437934504`*^9}, 3.80682837596437*^9, {3.8068284123293743`*^9, 
   3.806828460019357*^9}, {3.806828565663718*^9, 3.806828587245741*^9}, {
   3.8068286226001263`*^9, 3.8068286228106127`*^9}, {3.8068286676904106`*^9, 
   3.806828766220989*^9}, {3.8068288026694283`*^9, 3.8068288204097548`*^9}, 
   3.80682885087694*^9, {3.8157140844049315`*^9, 3.8157141012560425`*^9}, {
   3.8157143300898595`*^9, 3.81571434283487*^9}, {3.8157153184705467`*^9, 
   3.815715320009676*^9}, {3.815715365156077*^9, 3.815715374045029*^9}, {
   3.8157154117794633`*^9, 3.81571543025736*^9}, {3.8157824945967894`*^9, 
   3.8157825020696487`*^9}, {3.815782818218422*^9, 3.8157828383404274`*^9}, {
   3.81578604329498*^9, 3.8157860920525537`*^9}, {3.8157861475828657`*^9, 
   3.815786166165315*^9}},ExpressionUUID->"fb6a7533-0d6a-4187-92a1-\
f6af3a05449d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(0\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"77.42765699999998`"},
        {"129.06731999999997`"},
        {"148.24955000000003`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\!\(\*SubscriptBox[\(\[Mu]\), \(0\)]\) = ", 
   MatrixForm[{77.42765699999998, 129.06731999999997`, 148.24955000000003`}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8157849784292774`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[167]:=",ExpressionUUID->"aeea99c4-a859-4d17-\
b81c-7b3c12c1a103"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(k\\), \\(0\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   TagBox["0.01`",
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\!\(\*SubscriptBox[\(k\), \(0\)]\) = ", 
   MatrixForm[0.01]],
  Editable->False]], "Print",
 CellChangeTimes->{3.815784978444889*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[167]:=",ExpressionUUID->"e46aab5f-9c87-47b4-\
b22b-bd7c1e005473"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(0\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.1908538576556678`", "0.`", "0.`"},
       {"0.`", "5.923117991288887`", "0.`"},
       {"0.`", "0.`", "1.954932300944445`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\!\(\*SubscriptBox[\(\[Lambda]\), \(0\)]\) = ", 
   MatrixForm[{{1.1908538576556678`, 0., 0.}, {0., 5.923117991288887, 0.}, {
    0., 0., 1.954932300944445}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.815784978444889*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[167]:=",ExpressionUUID->"c21fe24c-f450-44af-\
9a99-7eca7ec57a87"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(v\\), \\(0\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   TagBox["5",
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\!\(\*SubscriptBox[\(v\), \(0\)]\) = ", 
   MatrixForm[5]],
  Editable->False]], "Print",
 CellChangeTimes->{3.815784978444889*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[167]:=",ExpressionUUID->"37e1af2c-2a57-4d21-\
83c5-3568c8702805"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Mu]", "*"], "[", "i_", "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"i", "\[Equal]", "1"}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        SubscriptBox["k", "0"], "*", 
        SubscriptBox["\[Mu]", "0"]}], "+", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"samples", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], "*", 
        RowBox[{"Mean", "[", 
         RowBox[{"samples", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}]}], 
      RowBox[{
       SubscriptBox["k", "0"], "+", 
       RowBox[{"Length", "[", 
        RowBox[{"samples", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}]], ",", "\n", 
     "\t\t\t\t", 
     RowBox[{"1", "<", "i", "\[LessEqual]", "9"}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["k", "*"], "[", 
         RowBox[{"i", "-", "1"}], "]"}], "*", 
        RowBox[{
         SuperscriptBox["\[Mu]", "*"], "[", 
         RowBox[{"i", "-", "1"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"samples", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], "*", 
        RowBox[{"Mean", "[", 
         RowBox[{"samples", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["k", "*"], "[", 
        RowBox[{"i", "-", "1"}], "]"}], "+", 
       RowBox[{"Length", "[", 
        RowBox[{"samples", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}]]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["k", "*"], "[", "i_", "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"i", "\[Equal]", "1"}], ",", 
     RowBox[{
      SubscriptBox["k", "0"], "+", 
      RowBox[{"Length", "[", 
       RowBox[{"samples", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"1", "<", "i", "\[LessEqual]", "9"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["k", "*"], "[", 
       RowBox[{"i", "-", "1"}], "]"}], "+", 
      RowBox[{"Length", "[", 
       RowBox[{"samples", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["v", "*"], "[", "i_", "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"i", "\[Equal]", "1"}], ",", 
     RowBox[{
      SubscriptBox["v", "0"], "+", 
      RowBox[{"Length", "[", 
       RowBox[{"samples", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"1", "<", "i", "\[LessEqual]", "9"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["v", "*"], "[", 
       RowBox[{"i", "-", "1"}], "]"}], "+", 
      RowBox[{"Length", "[", 
       RowBox[{"samples", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Lambda]", "*"], "[", "i_", "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"i", "\[Equal]", "1"}], ",", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ave", ",", "n", ",", "y"}], "}"}], ",", "\n", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{"ave", " ", "=", " ", 
         RowBox[{"Mean", "[", 
          RowBox[{"samples", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}], ";", "\n", 
        "\t\t\t\t\t", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", "[", 
          RowBox[{"samples", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}], ";", "\n", 
        "\t\t\t\t\t", 
        RowBox[{"y", " ", "=", " ", 
         RowBox[{"samples", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", "\n", "\t\t\t\t\t", 
        RowBox[{"(*", 
         RowBox[{"prior", "+", 
          RowBox[{"empirical", " ", "scatter", " ", "matrix"}], "+", 
          RowBox[{
          "the", " ", "uncertainty", " ", "in", " ", "the", " ", "mean"}]}], 
         "*)"}], "\n", "\t\t\t\t\t", 
        RowBox[{
         SubscriptBox["\[Lambda]", "0"], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "-", "ave"}], ",", 
             RowBox[{
              RowBox[{"y", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "-", "ave"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], " ", "+", 
         RowBox[{
          FractionBox[
           RowBox[{
            SubscriptBox["k", "0"], "*", "n"}], 
           RowBox[{
            SubscriptBox["k", "0"], "+", "n"}]], "*", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"ave", "-", 
             SubscriptBox["\[Mu]", "0"]}], ",", 
            RowBox[{"ave", "-", 
             SubscriptBox["\[Mu]", "0"]}]}], "]"}]}]}]}]}], "]"}], ",", "\n", 
     "\t\t\t\t", 
     RowBox[{"1", "<", "i", "\[LessEqual]", "9"}], ",", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ave", ",", "n", ",", "y"}], "}"}], ",", "\n", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{"ave", " ", "=", " ", 
         RowBox[{"Mean", "[", 
          RowBox[{"samples", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}], ";", "\n", 
        "\t\t\t\t\t", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", "[", 
          RowBox[{"samples", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}], ";", "\n", 
        "\t\t\t\t\t", 
        RowBox[{"y", " ", "=", " ", 
         RowBox[{"samples", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Lambda]", "*"], "[", 
          RowBox[{"i", "-", "1"}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "-", "ave"}], ",", 
             RowBox[{
              RowBox[{"y", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "-", "ave"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{
             SuperscriptBox["k", "*"], "[", 
             RowBox[{"i", "-", "1"}], "]"}], "*", "n"}], 
           RowBox[{
            RowBox[{
             SuperscriptBox["k", "*"], "[", 
             RowBox[{"i", "-", "1"}], "]"}], "+", "n"}]], "*", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"ave", "-", 
             RowBox[{
              SuperscriptBox["\[Mu]", "*"], "[", 
              RowBox[{"i", "-", "1"}], "]"}]}], ",", 
            RowBox[{"ave", "-", 
             RowBox[{
              SuperscriptBox["\[Mu]", "*"], "[", 
              RowBox[{"i", "-", "1"}], "]"}]}]}], "]"}]}]}]}]}], "]"}]}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.80301356492455*^9, 3.803013586817045*^9}, 
   3.8030139644141073`*^9, {3.8030141915584383`*^9, 3.8030145093516755`*^9}, {
   3.803022116774207*^9, 3.8030224225172863`*^9}, {3.803022580015443*^9, 
   3.8030226202868657`*^9}, {3.8033695308458147`*^9, 
   3.8033695643166227`*^9}, {3.8042255773346777`*^9, 3.804225595077536*^9}, {
   3.8042351802899933`*^9, 3.804235203056471*^9}, {3.8042352378505745`*^9, 
   3.804235341009271*^9}, {3.8042354065148277`*^9, 3.804235583042455*^9}, {
   3.80423563153289*^9, 3.8042356371276717`*^9}, {3.8042356949143333`*^9, 
   3.804235842008973*^9}, {3.804236184676408*^9, 3.8042362668266954`*^9}, {
   3.80423640365127*^9, 3.8042364443919725`*^9}, {3.8042386135829735`*^9, 
   3.804238621165801*^9}, {3.8042392542155843`*^9, 3.8042392545254126`*^9}, {
   3.8042392853253636`*^9, 3.804239294678711*^9}, {3.8042393543088217`*^9, 
   3.8042393598836393`*^9}, 3.8042397477581253`*^9, {3.8042398021340413`*^9, 
   3.804239818519679*^9}, {3.8042405264778814`*^9, 3.8042405422271614`*^9}, 
   3.8042838943222876`*^9, {3.804283994448676*^9, 3.804284035856451*^9}, {
   3.804285407242509*^9, 3.804285411026032*^9}, {3.8042854832509623`*^9, 
   3.804285505738221*^9}, {3.8042861637870407`*^9, 3.804286172252038*^9}, {
   3.804287009746691*^9, 3.804287126804223*^9}, {3.8042906912867575`*^9, 
   3.8042908024208975`*^9}, {3.804291150181302*^9, 3.8042912278694134`*^9}, {
   3.8042913076554976`*^9, 3.804291483135031*^9}, {3.8042915171586065`*^9, 
   3.8042915642772183`*^9}, {3.804291595374259*^9, 3.804291596436653*^9}, {
   3.804291631423254*^9, 3.8042916364532547`*^9}, 3.804291698953893*^9, {
   3.8042919827991433`*^9, 3.8042920150487757`*^9}, {3.804303744909581*^9, 
   3.8043037563300276`*^9}, {3.8043042296023417`*^9, 3.804304259179263*^9}, {
   3.804310137724654*^9, 3.8043101639343214`*^9}, {3.8043101996080575`*^9, 
   3.8043102082870135`*^9}, {3.8043275210729733`*^9, 3.8043275625047455`*^9}, 
   3.8043276208348556`*^9, {3.804327653353265*^9, 3.804327678159725*^9}, {
   3.8157846389277234`*^9, 3.8157846503756475`*^9}, {3.815786097977107*^9, 
   3.815786098461864*^9}},ExpressionUUID->"a1ee1e47-aff5-4f5f-8982-\
15de96dd3f5f"],

Cell[TextData[{
 "argmax p(\[Mu],\[CapitalSigma]|D)=(",
 Cell[BoxData[
  SuperscriptBox["\[Mu]", "*"]], "Print",
  InitializationCell->True,
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{{3.803894183498596*^9, 3.803894192475346*^9}, 
    3.8038947568689833`*^9, {3.8039368325738897`*^9, 3.803936858199801*^9}, 
    3.8042183984130387`*^9, 3.8042219241300325`*^9, {3.804225769455191*^9, 
    3.804225939125247*^9}, 3.8042348701497307`*^9, 3.804235077665618*^9, 
    3.8042351313469405`*^9, 3.804236685122074*^9, {3.8042371272557364`*^9, 
    3.8042371323849287`*^9}},ExpressionUUID->
  "e1c44640-443b-4c32-8056-dd4c53a612e1"],
 ", ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox["\[Lambda]", "*"], 
    RowBox[{
     SuperscriptBox["v", "*"], "+", "D", "+", "2"}]], TraditionalForm]],
  ExpressionUUID->"14143b2d-ceda-4497-92e1-7d5dd7855659"],
 ")"
}], "Text",
 CellChangeTimes->{{3.8030230098209276`*^9, 3.8030230223794193`*^9}, {
  3.803023164348749*^9, 3.8030231688991528`*^9}, {3.803023250951186*^9, 
  3.8030232596432204`*^9}, {3.8042402796672235`*^9, 
  3.8042403804145412`*^9}},ExpressionUUID->"583254b2-0b26-43e3-b7f2-\
baf7c26187f6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalityMean", " ", "=", " ", 
   RowBox[{"Mean", "[", "threephasedata", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"totalityCov", "  ", "=", " ", 
    RowBox[{"Covariance", "[", "threephasedata", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"sampleMean", " ", "=", " ", 
   RowBox[{"edist\[ScriptCapitalN]", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sampleCov", "  ", "=", " ", 
    RowBox[{"edist\[ScriptCapitalN]", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"BayesianMean", " ", "=", " ", 
   RowBox[{
    SuperscriptBox["\[Mu]", "*"], "[", "9", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BayesianCov", " ", "=", " ", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Lambda]", "*"], "[", "9", "]"}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["v", "*"], "[", "9", "]"}], "+", "3", "+", "2"}]]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<totalityMean = \>\"", ",", 
   RowBox[{"totalityMean", "//", "MatrixForm"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<totalityCov = \>\"", ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", "totalityCov", "]"}], "//", "MatrixForm"}]}], "]"}],
   "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<sampleMean\:ff08frequentist point of view\:ff09 = \>\"", ",", 
   RowBox[{"sampleMean", "//", "MatrixForm"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<sampleCov\:ff08frequentist point of view\:ff09= \>\"", ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", "sampleCov", "]"}], "//", "MatrixForm"}]}], "]"}], 
  "\n"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<sampleMean\:ff08Bayesian point of view\:ff09 = \>\"", ",", 
   RowBox[{"BayesianMean", "//", "MatrixForm"}]}], "]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<sampleCov\:ff08Bayesian point of view\:ff09= \>\"", ",", 
   RowBox[{
    RowBox[{"Sqrt", "[", "BayesianCov", "]"}], "//", "MatrixForm"}]}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.804236807680622*^9, 3.8042368136102448`*^9}, {
  3.8042368457281857`*^9, 3.8042368989777737`*^9}, {3.804285558857077*^9, 
  3.8042855904174566`*^9}, {3.804291649949541*^9, 3.8042916505076733`*^9}, {
  3.804292259981628*^9, 3.8042922878361907`*^9}, {3.8043273668791647`*^9, 
  3.804327371052784*^9}, {3.804327683855467*^9, 3.804327691862482*^9}, {
  3.80432777578601*^9, 3.8043277836558585`*^9}, {3.8068283612210093`*^9, 
  3.80682836170674*^9}, {3.806834234045994*^9, 3.8068342639088745`*^9}, {
  3.815784600481852*^9, 3.8157846033557787`*^9}, {3.8157861070137997`*^9, 
  3.8157861329164743`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"5a4587d6-e0b2-49d1-8a8f-de2a423388d1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"totalityMean = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"187.0463549888893`"},
        {"262.92156991666695`"},
        {"229.5603258486115`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["totalityMean = ", 
   MatrixForm[{187.0463549888893, 262.92156991666695`, 229.5603258486115}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.815712368056633*^9, 3.815714142923249*^9, 3.8157143772582436`*^9, 
   3.8157153248558664`*^9, 3.815715380195512*^9, {3.8157154208959236`*^9, 
   3.8157154356182632`*^9}, 3.81578245303202*^9, 3.8157844460134897`*^9, 
   3.8157846252531395`*^9, 3.8157846590008173`*^9, 3.815786139998416*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[180]:=",ExpressionUUID->"677da0a4-eda9-44e4-\
b20b-1a9442e0c21b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"totalityCov = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"74.16195225780373`", "73.91591336116902`", "54.06484394558161`"},
       {"73.91591336116902`", "87.63459358321478`", "58.53300944643199`"},
       {"54.06484394558161`", "58.53300944643199`", "54.6394032171326`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["totalityCov = ", 
   MatrixForm[{{74.16195225780373, 73.91591336116902, 54.06484394558161}, {
    73.91591336116902, 87.63459358321478, 58.53300944643199}, {
    54.06484394558161, 58.53300944643199, 54.6394032171326}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.815712368056633*^9, 3.815714142923249*^9, 3.8157143772582436`*^9, 
   3.8157153248558664`*^9, 3.815715380195512*^9, {3.8157154208959236`*^9, 
   3.8157154356182632`*^9}, 3.81578245303202*^9, 3.8157844460134897`*^9, 
   3.8157846252531395`*^9, 3.8157846590008173`*^9, 3.8157861400064116`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[180]:=",ExpressionUUID->"8687dabb-7dd5-492f-\
899c-99d1dd72747d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"sampleMean\:ff08frequentist point of view\:ff09 = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"166.03630179999996`"},
        {"238.85504600000002`"},
        {"204.96802299999982`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["sampleMean\:ff08frequentist point of view\:ff09 = ", 
   MatrixForm[{166.03630179999996`, 238.85504600000002`, 
    204.96802299999982`}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.815712368056633*^9, 3.815714142923249*^9, 3.8157143772582436`*^9, 
   3.8157153248558664`*^9, 3.815715380195512*^9, {3.8157154208959236`*^9, 
   3.8157154356182632`*^9}, 3.81578245303202*^9, 3.8157844460134897`*^9, 
   3.8157846252531395`*^9, 3.8157846590008173`*^9, 3.815786140015382*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[180]:=",ExpressionUUID->"9a82728b-2859-4a96-\
b483-eacfe885eaf8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"sampleCov\:ff08frequentist point of view\:ff09= \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"77.58645223795047`", "79.50860185710664`", "51.16890118187422`"},
       {"79.50860185710664`", "95.97557329364219`", "53.63728877469893`"},
       {"51.16890118187422`", "53.63728877469893`", "45.898120741010416`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["sampleCov\:ff08frequentist point of view\:ff09= ", 
   MatrixForm[{{77.58645223795047, 79.50860185710664, 51.16890118187422}, {
    79.50860185710664, 95.97557329364219, 53.63728877469893}, {
    51.16890118187422, 53.63728877469893, 45.898120741010416`}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.815712368056633*^9, 3.815714142923249*^9, 3.8157143772582436`*^9, 
   3.8157153248558664`*^9, 3.815715380195512*^9, {3.8157154208959236`*^9, 
   3.8157154356182632`*^9}, 3.81578245303202*^9, 3.8157844460134897`*^9, 
   3.8157846252531395`*^9, 3.8157846590008173`*^9, 3.815786140023378*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[180]:=",ExpressionUUID->"1b6f902c-b72e-4ccc-\
b3e7-538b36f92bd5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"sampleMean\:ff08Bayesian point of view\:ff09 = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"175.87076865426067`"},
        {"251.04012968781254`"},
        {"211.26307405288307`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["sampleMean\:ff08Bayesian point of view\:ff09 = ", 
   MatrixForm[{175.87076865426067`, 251.04012968781254`, 
    211.26307405288307`}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.815712368056633*^9, 3.815714142923249*^9, 3.8157143772582436`*^9, 
   3.8157153248558664`*^9, 3.815715380195512*^9, {3.8157154208959236`*^9, 
   3.8157154356182632`*^9}, 3.81578245303202*^9, 3.8157844460134897`*^9, 
   3.8157846252531395`*^9, 3.8157846590008173`*^9, 3.815786140026376*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[180]:=",ExpressionUUID->"b2a9285f-e6f2-4809-\
867c-f2162fdd4ba0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"sampleCov\:ff08Bayesian point of view\:ff09= \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"71.74384245809465`", "72.41380073862966`", "45.39277886166276`"},
       {"72.41380073862966`", "88.70324946035751`", "46.74430273811892`"},
       {"45.39277886166276`", "46.74430273811892`", "41.8073189122666`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["sampleCov\:ff08Bayesian point of view\:ff09= ", 
   MatrixForm[{{71.74384245809465, 72.41380073862966, 45.39277886166276}, {
    72.41380073862966, 88.70324946035751, 46.74430273811892}, {
    45.39277886166276, 46.74430273811892, 41.8073189122666}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.815712368056633*^9, 3.815714142923249*^9, 3.8157143772582436`*^9, 
   3.8157153248558664`*^9, 3.815715380195512*^9, {3.8157154208959236`*^9, 
   3.8157154356182632`*^9}, 3.81578245303202*^9, 3.8157844460134897`*^9, 
   3.8157846252531395`*^9, 3.8157846590008173`*^9, 3.815786140031373*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[180]:=",ExpressionUUID->"1113de16-fa8a-49f0-\
b86f-86baeb27a91a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Moment Matching Through Gamma Distribution", "Subsubsection",
 CellChangeTimes->{{3.8157862978944225`*^9, 
  3.815786314142962*^9}},ExpressionUUID->"d6ad42d7-59de-48e5-b99f-\
cbcb3aee63b7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalityMean", " ", "=", " ", 
   RowBox[{"Mean", "[", "threephasedata", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"totalityCov", "  ", "=", " ", 
    RowBox[{"Covariance", "[", "threephasedata", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "0.5"}], ",", 
       RowBox[{"-", "0.5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", "1", ",", 
       RowBox[{"-", "0.5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", 
       RowBox[{"-", "0.5"}], ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"\[Mu]neutral", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Tr", "[", 
      RowBox[{"A", ".", "totalityCov"}], "]"}], "+", 
     RowBox[{"totalityMean", ".", "A", ".", "totalityMean"}]}], ")"}], "*", 
   "r", "*", "\[CapitalDelta]t", "*", 
   RowBox[{
    RowBox[{"Length", "[", "Ia", "]"}], "/", 
    RowBox[{"(", 
     RowBox[{"3600", "*", "1000"}], ")"}]}]}]}], "\n", 
 RowBox[{"\[CapitalSigma]neutral", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "*", 
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{"A", ".", "totalityCov"}], "]"}], "^", "2"}]}], "+", 
     RowBox[{"4", "*", 
      RowBox[{
      "totalityMean", ".", "A", ".", "totalityCov", ".", "A", ".", 
       "totalityMean"}]}]}], ")"}], "*", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"r", "*", "\[CapitalDelta]t", "*", 
      RowBox[{
       RowBox[{"Length", "[", "Ia", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"3600", "*", "1000"}], ")"}]}]}], ")"}], "2"]}]}], "\n", 
 RowBox[{"skeneutral", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"8", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Tr", "[", 
          RowBox[{"A", ".", "totalityCov"}], "]"}], "^", "3"}], "+", 
        RowBox[{"3", "*", 
         RowBox[{"totalityMean", ".", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"A", ".", "totalityCov"}], ")"}], "2"], ".", "A", ".", 
          "totalityMean"}]}]}], ")"}]}], "+", 
     RowBox[{"6", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Tr", "[", 
          RowBox[{"A", ".", "totalityCov"}], "]"}], "^", "2"}], "+", 
        RowBox[{"2", "*", 
         RowBox[{
         "totalityMean", ".", "A", ".", "totalityCov", ".", 
          "totalityMean"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"A", ".", "totalityCov"}], "]"}], "+", 
        RowBox[{"totalityMean", ".", "A", ".", "totalityMean"}]}], ")"}]}], 
     "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"A", ".", "totalityCov"}], "]"}], "+", 
        RowBox[{"totalityMean", ".", "A", ".", "totalityMean"}]}], ")"}], 
      "3"]}], ")"}], "*", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"r", "*", "\[CapitalDelta]t", "*", 
      RowBox[{
       RowBox[{"Length", "[", "Ia", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"3600", "*", "1000"}], ")"}]}]}], ")"}], "3"]}]}]}], "Code",
 CellChangeTimes->{
  3.8057748256620865`*^9, {3.805774864764717*^9, 3.805774867733018*^9}, {
   3.8057749203726625`*^9, 3.805775086261446*^9}, {3.805775140933655*^9, 
   3.80577518534342*^9}, {3.805775251022826*^9, 3.8057752878548126`*^9}, {
   3.8057753265846453`*^9, 3.805775418725151*^9}, {3.8057755523036933`*^9, 
   3.80577555849315*^9}, {3.8057756496545935`*^9, 3.8057756567255464`*^9}, {
   3.80577622364651*^9, 3.8057762243201256`*^9}, {3.8057766067735453`*^9, 
   3.8057766154855585`*^9}, {3.8057766542158957`*^9, 3.805776661556633*^9}, {
   3.8057787102298007`*^9, 3.8057787208447256`*^9}, {3.8061151372930946`*^9, 
   3.806115417589187*^9}, {3.8061165979506793`*^9, 3.8061166062589607`*^9}, {
   3.8061166620722055`*^9, 3.8061166630746346`*^9}, 3.8061168388995976`*^9, {
   3.8157864187008543`*^9, 
   3.815786419159591*^9}},ExpressionUUID->"e515ea91-78e5-4ce0-bcf7-\
07bf0627f645"],

Cell[BoxData["2085.9187266142594`"], "Output",
 CellChangeTimes->{
  3.8057766173085155`*^9, 3.8057786408224583`*^9, {3.805778713697817*^9, 
   3.805778721868139*^9}, {3.806116635536834*^9, 3.8061166645167694`*^9}, 
   3.806116843038189*^9, 3.806792403987007*^9, 3.8067924457577753`*^9, 
   3.806821731782416*^9, {3.806882987730525*^9, 3.806883016852371*^9}},
 CellLabel->
  "Out[254]=",ExpressionUUID->"3977dee9-f16a-46f2-b627-312c9fe0e308"],

Cell[BoxData["3.8056727679104754`*^6"], "Output",
 CellChangeTimes->{
  3.8057766173085155`*^9, 3.8057786408224583`*^9, {3.805778713697817*^9, 
   3.805778721868139*^9}, {3.806116635536834*^9, 3.8061166645167694`*^9}, 
   3.806116843038189*^9, 3.806792403987007*^9, 3.8067924457577753`*^9, 
   3.806821731782416*^9, {3.806882987730525*^9, 3.806883016861366*^9}},
 CellLabel->
  "Out[255]=",ExpressionUUID->"276299f8-2392-42d6-bde6-c397142e5f8e"],

Cell[BoxData["1.2696381819811081`*^11"], "Output",
 CellChangeTimes->{
  3.8057766173085155`*^9, 3.8057786408224583`*^9, {3.805778713697817*^9, 
   3.805778721868139*^9}, {3.806116635536834*^9, 3.8061166645167694`*^9}, 
   3.806116843038189*^9, 3.806792403987007*^9, 3.8067924457577753`*^9, 
   3.806821731782416*^9, {3.806882987730525*^9, 3.80688301686637*^9}},
 CellLabel->
  "Out[256]=",ExpressionUUID->"ca15ce96-fc32-4716-8ed9-e27d2145db4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gdist", " ", "=", " ", 
   RowBox[{"GammaDistribution", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"moments", " ", "=", " ", 
    RowBox[{"Through", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Mean", ",", " ", "Variance"}], "}"}], "[", "gdist", "]"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"nmoments", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\[Mu]neutral", ",", "\[CapitalSigma]neutral"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"moments", " ", "==", " ", "nmoments"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}]}], "]"}], " "}]}], "Code",
 CellChangeTimes->{
  3.806104824563073*^9, {3.8061172511373167`*^9, 3.806117252440568*^9}, {
   3.8061173310718007`*^9, 3.8061173336873083`*^9}, {3.8061173784326944`*^9, 
   3.806117378567615*^9}, {3.8061174638242083`*^9, 3.806117464526803*^9}, {
   3.8061175438316855`*^9, 3.8061175755825253`*^9}, {3.8068949485470495`*^9, 
   3.8068950144264617`*^9}, {3.8068950840227213`*^9, 3.8068950851790876`*^9}, 
   3.8068962093624225`*^9, 
   3.81578634247194*^9},ExpressionUUID->"4b35ddf7-052e-4cd4-8c18-\
9a2b4c395b40"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ratnz", 
   "\"Solve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 315, 10, 29524141269860551962, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8061175770666456`*^9, 3.8067924040979443`*^9, 3.8067924458617163`*^9, 
   3.8068217319143405`*^9, 3.80682187463923*^9, {3.8068829879424033`*^9, 
   3.806883016989293*^9}, 3.806895019977257*^9, 3.806895599190116*^9, 
   3.8068962097842116`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[313]:=",ExpressionUUID->"19b61137-d09b-4cae-\
a704-b603d7326a34"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "1.1433082136562738`"}], ",", 
    RowBox[{"b", "\[Rule]", "1824.458795711384`"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8068962098201885`*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"6eae162f-a1e8-4d51-a0f3-66194c59835d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MonteCarlo", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ia", "^", "2"}], "+", 
      RowBox[{"Ib", "^", "2"}], "+", 
      RowBox[{"Ic", "^", "2"}], "-", 
      RowBox[{"Ia", "*", "Ib"}], "-", 
      RowBox[{"Ib", "*", "Ic"}], "-", 
      RowBox[{"Ia", "*", "Ic"}]}], ")"}], "*", "\[CapitalDelta]t", "*", "r", 
    "*", 
    RowBox[{
     RowBox[{"Length", "[", "Ia", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"3600", "*", "1000"}], ")"}]}]}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.8068950899697523`*^9, {3.806895146506007*^9, 3.806895173418449*^9}, {
   3.806895208458393*^9, 3.80689533615666*^9}, {3.806895375387471*^9, 
   3.806895458641821*^9}, {3.806895502069641*^9, 3.806895523761052*^9}, 
   3.8068955969221745`*^9},
 CellLabel->
  "In[307]:=",ExpressionUUID->"579334a5-cc1b-47f2-a3cc-e740bb2ae34a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"MonteCarlo", ",", "100", ",", "\"\<PDF\>\"", ",", 
     RowBox[{"ChartLegends", "\[Rule]", 
      RowBox[{"{", "\"\<MonteCarlo\>\"", "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Current(A)\>\"", ",", "\"\<PDF\>\""}], "}"}]}]}], "]"}], 
   ",", "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{"gdist", ",", "x"}], "]"}], "/.", "sol"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10000"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}]}], 
  "]"}]], "Code",
 CellChangeTimes->{
  3.8068950899697523`*^9, {3.806895146506007*^9, 3.806895173418449*^9}, {
   3.806895208458393*^9, 3.8068953292905626`*^9}, {3.8068955271461396`*^9, 
   3.80689555426659*^9}, {3.806895588257163*^9, 3.806895592669642*^9}, {
   3.806895648764988*^9, 3.806895649080806*^9}, {3.8068957480110245`*^9, 
   3.806895827095022*^9}, {3.815786369224216*^9, 
   3.815786379588781*^9}},ExpressionUUID->"be8c6048-0855-4e0a-9f3d-\
2c29d7f6581b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.427]]], 
        RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.427]]], 
          RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{
            
            RectangleBox[{0., 0}, {200., 0.00023541666666666668`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{200., 0}, {400., 0.0002482638888888889}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{400., 0}, {600., 0.00027881944444444444`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{600., 0}, {800., 0.00032256944444444444`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{800., 0}, {1000., 0.000340625}, "RoundingRadius" -> 
             0]}}, {{
            
            RectangleBox[{1000., 0}, {1200., 0.00034895833333333334`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{1200., 0}, {1400., 0.00031875}, "RoundingRadius" -> 
             0]}}, {{
            
            RectangleBox[{1400., 0}, {1600., 0.000334375}, "RoundingRadius" -> 
             0]}}, {{
            
            RectangleBox[{1600., 0}, {1800., 0.0002892361111111111}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{1800., 0}, {2000., 0.0002815972222222222}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{2000., 0}, {2200., 0.00024097222222222223`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{2200., 0}, {2400., 0.00021180555555555555`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{2400., 0}, {2600., 0.00017916666666666667`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{2600., 0}, {2800., 0.00015763888888888888`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{2800., 0}, {3000., 0.00015416666666666666`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{3000., 0}, {3200., 0.00012048611111111111`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{3200., 0}, {3400., 0.0001125}, "RoundingRadius" -> 
             0]}}, {{
            
            RectangleBox[{3400., 0}, {3600., 0.00009583333333333334}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{3600., 0}, {3800., 0.00009097222222222223}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{3800., 0}, {4000., 0.00007604166666666667}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{4000., 0}, {4200., 0.00006597222222222222}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{4200., 0}, {4400., 0.00005138888888888889}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{4400., 0}, {4600., 0.00005}, "RoundingRadius" -> 
             0]}}, {{
            
            RectangleBox[{4600., 0}, {4800., 0.000040972222222222225`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{4800., 0}, {5000., 0.000034027777777777775`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{5000., 0}, {5200., 0.000028819444444444443`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{5200., 0}, {5400., 0.00003263888888888889}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{5400., 0}, {5600., 0.000022916666666666667`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{5600., 0}, {5800., 0.000020833333333333333`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{5800., 0}, {6000., 0.000021180555555555556`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{6000., 0}, {6200., 0.000018055555555555555`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{6200., 0}, {6400., 0.00001875}, "RoundingRadius" -> 
             0]}}, {{
            
            RectangleBox[{6400., 0}, {6600., 0.000014583333333333333`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{6600., 0}, {6800., 0.000010763888888888888`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{6800., 0}, {7000., 0.000015277777777777777`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{7000., 0}, {7200., 0.000013541666666666666`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{7200., 0}, {7400., 0.000010069444444444445`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{7400., 0}, {7600., 9.027777777777777*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{7600., 0}, {7800., 6.597222222222222*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{7800., 0}, {8000., 0.000010763888888888888`}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{8000., 0}, {8200., 3.4722222222222224`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{8200., 0}, {8400., 5.555555555555556*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{8400., 0}, {8600., 6.597222222222222*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{8600., 0}, {8800., 5.555555555555556*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{8800., 0}, {9000., 1.7361111111111112`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{9000., 0}, {9200., 3.4722222222222224`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{9200., 0}, {9400., 3.819444444444444*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{9400., 0}, {9600., 3.4722222222222224`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{9600., 0}, {9800., 4.861111111111111*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{9800., 0}, {10000., 3.4722222222222224`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{10000., 0}, {10200., 2.4305555555555557`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{10200., 0}, {10400., 2.0833333333333334`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            RectangleBox[{10400., 0}, {10600., 3.125*^-6}, "RoundingRadius" -> 
             0]}}, {{
            
            RectangleBox[{10600., 0}, {10800., 1.0416666666666667`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{11000., 0}, {11200., 6.944444444444445*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{11200., 0}, {11400., 1.0416666666666667`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{11400., 0}, {11600., 6.944444444444445*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{11600., 0}, {11800., 6.944444444444445*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{11800., 0}, {12000., 6.944444444444445*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{12000., 0}, {12200., 1.0416666666666667`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{12400., 0}, {12600., 3.4722222222222224`*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{12600., 0}, {12800., 1.0416666666666667`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{12800., 0}, {13000., 1.0416666666666667`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{13000., 0}, {13200., 3.4722222222222224`*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{13200., 0}, {13400., 1.388888888888889*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{13400., 0}, {13600., 3.4722222222222224`*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{13600., 0}, {13800., 6.944444444444445*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{14000., 0}, {14200., 3.4722222222222224`*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{14200., 0}, {14400., 3.4722222222222224`*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{14600., 0}, {14800., 3.4722222222222224`*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{15000., 0}, {15200., 6.944444444444445*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{15200., 0}, {15400., 1.0416666666666667`*^-6}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{16800., 0}, {17000., 3.4722222222222224`*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{17000., 0}, {17200., 3.4722222222222224`*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{17200., 0}, {17400., 3.4722222222222224`*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{18000., 0}, {18200., 3.4722222222222224`*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{20200., 0}, {20400., 3.4722222222222224`*^-7}, 
             "RoundingRadius" -> 0]}}, {{
            
            RectangleBox[{21000., 0}, {21200., 3.4722222222222224`*^-7}, 
             "RoundingRadius" -> 
             0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$101642#1"]& ]}}, {}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Age\"", TraditionalForm], 
       FormBox["\"Number of Countries\"", TraditionalForm]}, 
     AxesOrigin -> {-148., 0}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{0, 7400}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"MonteCarlo\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.427]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.427`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.987148`", ",", "0.8073604000000001`", ",", 
                    "0.49470040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", "Automatic", "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8068955896503363`*^9, 3.8068956052754717`*^9}, 
   3.8068956503840303`*^9, {3.806895808102869*^9, 3.8068958300043597`*^9}},
 CellLabel->
  "Out[312]=",ExpressionUUID->"bdc84834-0ff4-4789-8bc7-13e16e41d167"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{959, 1012},
WindowMargins->{{433, Automatic}, {Automatic, 132.5}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (2020\:5e746\:670819\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2ce9d759-f6d6-47da-8331-1cef49af5305"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 407, 6, 98, "Title",ExpressionUUID->"ed9b963a-0d40-494c-be29-2ca8ffa18313"],
Cell[990, 30, 659, 13, 122, "Text",ExpressionUUID->"5ae06f43-3833-438c-b62a-217611f9cc34"],
Cell[1652, 45, 821, 23, 86, "Code",ExpressionUUID->"29ed0497-2608-4544-955c-3338f3cffe99"],
Cell[2476, 70, 880, 24, 121, "Code",ExpressionUUID->"222bbdac-cbd9-4b45-b441-925ea3cb7d15"],
Cell[3359, 96, 1410, 34, 86, "Code",ExpressionUUID->"0cec9744-2eaa-4bf5-a308-e8f406ea69df"],
Cell[CellGroupData[{
Cell[4794, 134, 1026, 25, 86, "Code",ExpressionUUID->"a2a60532-47d9-4da2-8798-6dd8d9f1f559"],
Cell[5823, 161, 1159, 19, 22, "Print",ExpressionUUID->"589528cf-3318-4301-8d87-a0d9e0e7d42a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7019, 185, 335, 5, 67, "Section",ExpressionUUID->"717ea891-dec8-4b96-a6cd-696ad4006d18"],
Cell[7357, 192, 765, 22, 56, "Text",ExpressionUUID->"f03d9281-f57e-49d2-87d9-0f64d590f1ee"],
Cell[CellGroupData[{
Cell[8147, 218, 1776, 38, 103, "Code",ExpressionUUID->"23f04a8e-c4ca-43a3-aa5e-10d745dd863a",
 InitializationCell->True],
Cell[9926, 258, 737, 15, 22, "Print",ExpressionUUID->"dab8e694-bc31-41cd-8618-697f1afc80a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10700, 278, 5333, 140, 525, "Input",ExpressionUUID->"1ba0b525-0b77-43af-bc91-1925a45114b5"],
Cell[16036, 420, 1984, 46, 282, "Output",ExpressionUUID->"47b07e14-2f62-4b03-8730-3053581e5fbe"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18066, 472, 302, 5, 67, "Section",ExpressionUUID->"15ee1627-611c-42c1-9d7e-964c762dee9d"],
Cell[18371, 479, 669, 13, 78, "Text",ExpressionUUID->"89435a27-6638-4764-98d8-e1833bb976c1"],
Cell[CellGroupData[{
Cell[19065, 496, 226, 5, 54, "Subsection",ExpressionUUID->"74a3d41e-1ef5-424e-a97b-0d56595a0221"],
Cell[CellGroupData[{
Cell[19316, 505, 1282, 36, 115, "Input",ExpressionUUID->"573346c8-077f-4dd2-a088-5575424d3fe5"],
Cell[20601, 543, 228423, 3765, 310, "Output",ExpressionUUID->"96b5acbd-99f2-46c7-b9c9-c3303f25b35f"]
}, {2}]],
Cell[249036, 4311, 4085, 129, 216, "Text",ExpressionUUID->"98ff0a74-3719-45af-a9f6-471c9410c56f"],
Cell[CellGroupData[{
Cell[253146, 4444, 9136, 193, 401, "Code",ExpressionUUID->"fb6a7533-0d6a-4187-92a1-f6af3a05449d"],
Cell[CellGroupData[{
Cell[262307, 4641, 1055, 28, 52, "Print",ExpressionUUID->"aeea99c4-a859-4d17-b81c-7b3c12c1a103"],
Cell[263365, 4671, 464, 13, 22, "Print",ExpressionUUID->"e46aab5f-9c87-47b4-b22b-bd7c1e005473"],
Cell[263832, 4686, 1080, 27, 52, "Print",ExpressionUUID->"c21fe24c-f450-44af-9a99-7eca7ec57a87"],
Cell[264915, 4715, 457, 13, 22, "Print",ExpressionUUID->"37e1af2c-2a57-4d21-83c5-3568c8702805"]
}, Open  ]]
}, Open  ]],
Cell[265399, 4732, 9846, 252, 398, "Code",ExpressionUUID->"a1ee1e47-aff5-4f5f-8982-15de96dd3f5f"],
Cell[275248, 4986, 1183, 28, 37, "Text",ExpressionUUID->"583254b2-0b26-43e3-b7f2-baf7c26187f6"],
Cell[CellGroupData[{
Cell[276456, 5018, 2772, 67, 362, "Code",ExpressionUUID->"5a4587d6-e0b2-49d1-8a8f-de2a423388d1"],
Cell[CellGroupData[{
Cell[279253, 5089, 1258, 31, 52, "Print",ExpressionUUID->"677da0a4-eda9-44e4-b20b-1a9442e0c21b"],
Cell[280514, 5122, 1460, 31, 52, "Print",ExpressionUUID->"8687dabb-7dd5-492f-899c-99d1dd72747d"],
Cell[281977, 5155, 1343, 33, 52, "Print",ExpressionUUID->"9a82728b-2859-4a96-b483-eacfe885eaf8"],
Cell[283323, 5190, 1535, 32, 52, "Print",ExpressionUUID->"1b6f902c-b72e-4ccc-b3e7-538b36f92bd5"],
Cell[284861, 5224, 1337, 33, 52, "Print",ExpressionUUID->"b2a9285f-e6f2-4809-867c-f2162fdd4ba0"],
Cell[286201, 5259, 1524, 32, 52, "Print",ExpressionUUID->"1113de16-fa8a-49f0-b86f-86baeb27a91a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[287774, 5297, 195, 3, 44, "Subsubsection",ExpressionUUID->"d6ad42d7-59de-48e5-b99f-cbcb3aee63b7"],
Cell[CellGroupData[{
Cell[287994, 5304, 4184, 114, 159, "Code",ExpressionUUID->"e515ea91-78e5-4ce0-bcf7-07bf0627f645"],
Cell[292181, 5420, 442, 7, 32, "Output",ExpressionUUID->"3977dee9-f16a-46f2-b627-312c9fe0e308"],
Cell[292626, 5429, 445, 7, 32, "Output",ExpressionUUID->"276299f8-2392-42d6-bde6-c397142e5f8e"],
Cell[293074, 5438, 445, 7, 32, "Output",ExpressionUUID->"ca15ce96-fc32-4716-8ed9-e27d2145db4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293556, 5450, 1299, 33, 103, "Code",ExpressionUUID->"4b35ddf7-052e-4cd4-8c18-9a2b4c395b40"],
Cell[294858, 5485, 682, 14, 42, "Message",ExpressionUUID->"19b61137-d09b-4cae-a704-b603d7326a34"],
Cell[295543, 5501, 321, 8, 32, "Output",ExpressionUUID->"6eae162f-a1e8-4d51-a0f3-66194c59835d"]
}, Open  ]],
Cell[295879, 5512, 881, 23, 50, "Code",ExpressionUUID->"579334a5-cc1b-47f2-a3cc-e740bb2ae34a"],
Cell[CellGroupData[{
Cell[296785, 5539, 1206, 28, 68, "Code",ExpressionUUID->"be8c6048-0855-4e0a-9f3d-2c29d7f6581b"],
Cell[297994, 5569, 331273, 6562, 226, "Output",ExpressionUUID->"bdc84834-0ff4-4789-8bc7-13e16e41d167"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

